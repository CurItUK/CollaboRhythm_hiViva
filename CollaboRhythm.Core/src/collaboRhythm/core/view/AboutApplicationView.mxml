<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:model="collaboRhythm.core.model.*"
		 xmlns:view="collaboRhythm.core.view.*"
		 hideEffect="{hideEffect}"
		 showEffect="{showEffect}"
		 height="100%" width="100%"
		 preinitialize="preinitializeHandler(event)"
		 visible="false"
		 click="{visible = false}"
		>
	<fx:Declarations>
		<s:Fade id="hideEffect" target="this" alphaFrom="1" alphaTo="0"/>
		<s:Fade id="showEffect" target="this" alphaFrom="0" alphaTo="1" duration="100"/>
	</fx:Declarations>
	<fx:Script><![CDATA[
		import collaboRhythm.core.model.AboutApplicationModel;
		import collaboRhythm.shared.model.settings.Settings;

		import com.riaspace.nativeApplicationUpdater.NativeApplicationUpdater;

		import mx.events.FlexEvent;

		[Bindable]
		private var _applicationInfo:AboutApplicationModel = new AboutApplicationModel();
		private var _settings:Settings;

		private function preinitializeHandler(event:FlexEvent):void
		{
			_applicationInfo.settings = settings;
			_applicationInfo.initialize();
			versionWatermarkGroup.visible = true;
		}

		public function get settings():Settings
		{
			return _settings;
		}

		public function set settings(value:Settings):void
		{
			_settings = value;
			_applicationInfo.settings = settings;
		}

		private function checkForUpdateButton_clickHandler(event:MouseEvent):void
		{
			event.stopImmediatePropagation();
			_applicationInfo.checkForUpdate();
		}

		private function updateNowButton_clickHandler(event:MouseEvent):void
		{
			event.stopImmediatePropagation();
			_applicationInfo.updateNow();
		}
		]]></fx:Script>
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="#000000" alpha="0.3"/>
		</s:fill>
	</s:Rect>
	<s:Group verticalCenter="0" horizontalCenter="0" contentBackgroundColor="0x3086F1" contentBackgroundAlpha="0.79">
		<s:filters>
			<s:GlowFilter id="glowFilter"
						  quality="3"
						  alpha="0.2"
						  color="0x000000"
						  blurX="5"
						  blurY="5"
						  strength="5"/>
		</s:filters>
		<s:Rect height="100%" width="100%">
			<s:fill>
				<s:SolidColor color="0xFFFFFF" alpha="0.6"/>
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke color="0xFFFFFF" alpha="0.6"/>
			</s:stroke>
		</s:Rect>
		<s:VGroup id="dialogContentGroup" horizontalAlign="center" paddingLeft="20" paddingRight="20"
				  paddingTop="20" paddingBottom="20" gap="20" width="100%">
			<s:filters>
				<s:GlowFilter id="contentGlowFilter"
							  quality="3"
							  alpha="0.6"
							  color="0xFFFFFF"
							  blurX="2"
							  blurY="2"
							  strength="5"/>
			</s:filters>
			<s:VGroup id="versionWatermarkGroup" width="100%" height="100%" visible="false" fontSize="24" horizontalAlign="center" >
				<s:Label id="applicationNameLabel" text="{_applicationInfo.appName}" fontSize="36"/>
				<view:CollaboRhythm_icon_128x128/>
				<s:Label id="applicationCopyrightLabel" text="{_applicationInfo.appCopyright}"/>
				<s:Label id="applicationVersionLabel" text="Version {_applicationInfo.appVersion}"/>
				<s:Label id="applicationModificationLabel" text="Updated {_applicationInfo.appModificationDateString}"
						 visible="{_applicationInfo.appModificationDateString != null}"/>
			</s:VGroup>
			<s:VGroup id="updateGroup" width="100%" height="100%" fontSize="24" horizontalAlign="center" >
				<s:Button id="checkForUpdateButton" label="Check for Update" click="checkForUpdateButton_clickHandler(event)" visible="{_applicationInfo.isUpdateDescriptorAvailable}" includeInLayout="{_applicationInfo.isUpdateDescriptorAvailable}"/>
				<s:Label id="applicationUpdateAvailability"
						 text="{_applicationInfo.appUpdateStatus}"/>
				<s:Button id="updateNowButton" label="Update Now" click="updateNowButton_clickHandler(event)" visible="{_applicationInfo.isUpdateAvailable}" includeInLayout="{_applicationInfo.isUpdateAvailable}"/>
				<mx:ProgressBar id="progressBar" source="{_applicationInfo.updater}" label="Downloading %3%" visible="{_applicationInfo.downloading}" includeInLayout="{_applicationInfo.downloading}"/>
			</s:VGroup>
		</s:VGroup>
	</s:Group>
</s:Group>
