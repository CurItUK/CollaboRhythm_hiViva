<?xml version="1.0" encoding="utf-8"?>
<!--~
  ~ Copyright 2011 John Moore, Scott Gilroy
  ~
  ~ This file is part of CollaboRhythm.
  ~
  ~ CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
  ~ License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
  ~ version.
  ~
  ~ CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
  ~ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
  ~ details.
  ~
  ~ You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
  ~ <http://www.gnu.org/licenses/>.
  -->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:tabletViews="collaboRhythm.tablet.view.*"
		 show="showHandler()"
		 height="100%" width="100%">
	<fx:Script>
        <![CDATA[
		import collaboRhythm.shared.model.Account;
		import collaboRhythm.shared.model.CollaborationModel;
		import collaboRhythm.shared.model.services.ICurrentDateSource;
		import collaboRhythm.shared.model.services.WorkstationKernel;
		import collaboRhythm.tablet.controller.TabletApplicationController;

		import mx.core.IVisualElement;
		import mx.core.IVisualElementContainer;

		import spark.events.ElementExistenceEvent;

		public static const RECORD_BACKGROUND_COLOR:uint = 0xE6E7E8;

		private var _tabletApplicationController:TabletApplicationController;
		[Bindable]
		private var _recordAccount:Account;
		[Bindable]
		private var _collaborationModel:CollaborationModel;
		private var _widgetContainers:Vector.<IVisualElementContainer> = new Vector.<IVisualElementContainer>();

		public function init(tabletApplicationController:TabletApplicationController, recordAccount:Account):void
		{
			_tabletApplicationController = tabletApplicationController;
			_recordAccount = recordAccount;
			_collaborationModel = _tabletApplicationController.collaborationController.collaborationModel;

			_widgetContainers.push(scheduleWidgetGroup);
			_widgetContainers.push(bloodPressureWidgetGroup);
			_widgetContainers.push(buttonWidgetsGroup);
		}

		public function showHandler():void
		{
			_tabletApplicationController.activeRecordView_showHandler(_recordAccount);
		}

		public function get widgetContainers():Vector.<IVisualElementContainer>
		{
			return _widgetContainers;
		}
		]]>
    </fx:Script>
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="{RECORD_BACKGROUND_COLOR}"/>
		</s:fill>
	</s:Rect>
	<s:HGroup width="100%" height="100%" gap="0" paddingLeft="10" paddingRight="10" paddingTop="10" paddingBottom="10">
		<s:HGroup id="widgetViewsGroup" width="100%" height="100%" gap="20">
			<s:VGroup id="scheduleWidgetGroup" width="50%" height="100%">

			</s:VGroup>
			<s:VGroup id="bloodPressureWidgetGroup" width="50%" height="100%">

			</s:VGroup>
		</s:HGroup>
		<s:VGroup id="buttonWidgetsGroup" width="110" height="100%">

		</s:VGroup>
	</s:HGroup>
	<s:Group id="fullViewsGroup" width="100%" height="100%">

	</s:Group>
</s:Group>
