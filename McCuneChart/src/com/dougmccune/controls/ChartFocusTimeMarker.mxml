<?xml version="1.0" encoding="utf-8"?>
<!--
 ~ Copyright 2011 John Moore, Scott Gilroy
 ~
 ~ This file is part of CollaboRhythm.
 ~
 ~ CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.
 ~
 ~ CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
 ~
 ~ You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see <http://www.gnu.org/licenses/>.
 -->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="30" height="300"
		 mouseOver="mouseOverHandler(event)"
		 mouseOut="mouseOutHandler(event)"
		 >
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.filters.BitmapFilterQuality;
			
			import mx.managers.CursorManagerPriority;

			[Embed(source="assets/horizontalMove.png")]
			private var horizontalMoveCursor:Class;
			private var horizontalMoveCursorId:int;

			protected function mouseOverHandler(event:MouseEvent):void
			{
				// TODO: determine why this isn't working and fix; currently disabled because this results in no visible cursor
//				horizontalMoveCursorId = this.cursorManager.setCursor(horizontalMoveCursor, CursorManagerPriority.LOW, -8, -8);
			}

			protected function mouseOutHandler(event:MouseEvent):void
			{
				if (horizontalMoveCursorId != 0)
				{
					this.cursorManager.removeCursor(horizontalMoveCursorId);
					horizontalMoveCursorId = 0;
				}
			}

		]]>
	</fx:Script>
	
	<s:filters>
		<s:DropShadowFilter blurX="5" blurY="5" distance="5" quality="{BitmapFilterQuality.MEDIUM}" 
							angle="45" color="0x000000" alpha="0.4"/>
		<s:BevelFilter distance="1" highlightAlpha="0.5" shadowAlpha="0.5"/>
	</s:filters>
	<s:Rect height="{this.height}" width="{this.width}">
		<s:fill>
			<s:SolidColor color="0x00FF00" alpha="0"/>
		</s:fill>
	</s:Rect>
	<s:Line id="focusTimeLine" height="{this.height - 15}" 
			x="15"
			y="10">
		<s:stroke>
			<s:SolidColorStroke color="#4580AE" weight="2"/>
		</s:stroke>  
	</s:Line>
	<s:Path id="focusTimeTopTriangle" data="M -15 0 L -15 2 L 0 17 L 15 2 L 15 0 z"
			x="15"
			y="-1">  
		<s:fill>
			<s:SolidColor color="#4580AE"/>
		</s:fill>
		<s:stroke>
			<s:SolidColorStroke weight="1" color="#000000" alpha="0"/>
		</s:stroke>
	</s:Path>
	<s:Path id="focusTimeBottomTriangle" data="M -8 0 L -8 -2 L 0 -8 L 8 -2 L 8 0 z"
			x="15"
			y="{this.height + 1}">
		<s:fill>
			<s:SolidColor color="#4580AE"/>
		</s:fill>
		<s:stroke>
			<s:SolidColorStroke weight="1" color="#000000" alpha="0"/>
		</s:stroke>
	</s:Path>
</s:Group>
