<?xml version="1.0"?>
<!---
 - Copyright 2012 John Moore, Scott Gilroy
 -
 - This file is part of CollaboRhythm.
 -
 - CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 - License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
 - version.
 -
 - CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 - warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 - details.
 -
 - You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
 - <http://www.gnu.org/licenses/>.
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:view="collaboRhythm.plugins.foraD40b.view.*"
		 xmlns:sharedView="collaboRhythm.plugins.schedule.shared.view.*"
		 width="100%" height="100%">

	<fx:Script><![CDATA[
		import collaboRhythm.plugins.foraD40b.controller.BloodGlucoseHealthActionInputController;
		import collaboRhythm.plugins.foraD40b.model.BloodGlucoseHealthActionInputModel;
		import collaboRhythm.plugins.foraD40b.model.BloodGlucoseHealthActionListViewAdapter;
		import collaboRhythm.plugins.schedule.shared.view.ScheduledHealthActionDetailViewEvent;

		private var _dataInputController:BloodGlucoseHealthActionInputController;

		function init(dataInputModel:BloodGlucoseHealthActionInputModel,
					  dataInputController:BloodGlucoseHealthActionInputController):void
		{
			_dataInputController = dataInputController;

			scheduledHealthActionDetailView.init(new BloodGlucoseHealthActionListViewAdapter(dataInputModel.scheduleItemOccurrence,
					dataInputModel.healthActionModelDetailsProvider));
			scheduledHealthActionDetailView.addEventListener(ScheduledHealthActionDetailViewEvent.PLAY_VIDEO,
					playVideoEventHandler);

			reportBloodGlucoseView.init(dataInputModel, _dataInputController);
			reportAdherenceTimeView.init(dataInputModel, _dataInputController);
			if (dataInputModel.scheduleItemOccurrence)
			{
				scheduleHealthActionsClockIconView.init(dataInputModel.scheduleCollectionsProvider, dataInputModel.scheduleItemOccurrence.dateStart, dataInputModel.scheduleItemOccurrence.dateEnd);
			}
			else
			{
				scheduleHealthActionsClockIconView.visible = false;
			}
		}

		private function playVideoEventHandler(event:ScheduledHealthActionDetailViewEvent):void
		{
			_dataInputController.playVideo(event.instructionalVideoPath);
		}

		private function showHistoryButton_clickHandler():void
		{
			_dataInputController.showBloodGlucoseHistoryView();
		}
		]]></fx:Script>
	<s:Group width="100%" height="140">
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="0xFFFFFF"/>
			</s:fill>
		</s:Rect>
		<s:Group height="100%" horizontalCenter="0">
			<sharedView:ScheduledHealthActionDetailView id="scheduledHealthActionDetailView" height="100%"/>
			<sharedView:ScheduledHealthActionsClockIconView id="scheduleHealthActionsClockIconView" width="50" height="50" left="10" top="10"/>
		</s:Group>
		<s:Group width="25%" height="100%" right="0">
			<s:Button label="Show History" verticalCenter="0" click="showHistoryButton_clickHandler()"/>
		</s:Group>
		<s:Line width="100%" bottom="0">
			<s:stroke>
				<s:SolidColorStroke color="0x000000"/>
			</s:stroke>
		</s:Line>
	</s:Group>
	<sharedView:ReportAdherenceTimeView id="reportAdherenceTimeView" verticalCenter="0" right="140"/>
	<view:ReportBloodGlucoseView id="reportBloodGlucoseView" verticalCenter="0" left="140"/>
</s:Group>
