<?xml version="1.0"?>
<!---
 - Copyright 2012 John Moore, Scott Gilroy
 -
 - This file is part of CollaboRhythm.
 -
 - CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 - License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
 - version.
 -
 - CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 - warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 - details.
 -
 - You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
 - <http://www.gnu.org/licenses/>.
-->
<tablet:TabletViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:tablet="collaboRhythm.shared.view.tablet.*"
					   xmlns:view="collaboRhythm.plugins.foraD40b.view.*"
					   xmlns:sharedView="collaboRhythm.plugins.schedule.shared.view.*"
					   creationComplete="creationCompleteHandler(event)"
					   addedToStage="addedToStageHandler()"
					   implements="collaboRhythm.plugins.schedule.shared.model.IHealthActionInputView"
					   title="Hypoglycemia Action Plan - Step 4: Eat Slow Carbs">
	<fx:Declarations>
		<s:Button id="finishActionButton" label="Finish" click="finishButton_clickHandler()"/>
	</fx:Declarations>
	<fx:Style>
		#instructionsLabel {
			fontSize: 36;
		}

		.timeCondition {
			fontSize: 36;
			color: #808285;
		}

		.carbInstructions {
			fontSize: 30;
		}
	</fx:Style>
	<fx:Script><![CDATA[
		import collaboRhythm.plugins.foraD40b.controller.BloodGlucoseHealthActionInputController;
		import collaboRhythm.plugins.foraD40b.model.BloodGlucoseHealthActionInputModel;
		import collaboRhythm.plugins.schedule.shared.model.HealthActionInputModelAndController;
		import collaboRhythm.plugins.schedule.shared.model.IHealthActionInputController;

		import mx.events.FlexEvent;

		[Embed(source="/assets/images/juice.png")]
		public var juiceImageClass:Class;

		[Embed(source="/assets/images/soda.png")]
		public var sodaImageClass:Class;

		[Embed(source="/assets/images/glucoseTablets.png")]
		public var glucoseTabletsImageClass:Class;

		[Embed(source="/assets/images/honey.png")]
		public var honeyImageClass:Class;

		private var _dataInputController:BloodGlucoseHealthActionInputController;
		[Bindable]
		private var _dataInputModel:BloodGlucoseHealthActionInputModel;

		override public function set data(value:Object):void
		{
			super.data = value;

			var dataInputModelAndController:HealthActionInputModelAndController = HealthActionInputModelAndController(value);

			_dataInputModel = BloodGlucoseHealthActionInputModel(dataInputModelAndController.healthActionInputModel);
			_dataInputController = BloodGlucoseHealthActionInputController(dataInputModelAndController.healthActionInputController);
		}

		private function creationCompleteHandler(event:FlexEvent):void
		{
			hypoglycemiaActionPlanView.init(_dataInputModel);

			instructionsLabel.text = "Your blood glucose (" + _dataInputModel.bloodGlucose +
					" mg/dL) is back to normal."
		}

		override protected function createChildren():void
		{
			super.createChildren();
			actionContent.unshift(finishActionButton);
		}

		private function addedToStageHandler():void
		{
			addEventListener(KeyboardEvent.KEY_UP, hardwareKeyUpHandler)
		}

		private function hardwareKeyUpHandler(event:KeyboardEvent):void
		{
			if (event.keyCode == Keyboard.BACK || event.keyCode == Keyboard.HOME)
			{
				event.stopImmediatePropagation();
				event.preventDefault();
			}
		}

		override public function homeButton_clickHandler():void
		{

		}

		public function get healthActionInputController():IHealthActionInputController
		{
			return _dataInputController;
		}

		private function finishButton_clickHandler():void
		{
			_dataInputController.nextStep();
		}
		]]></fx:Script>
	<s:Group width="100%" height="100%">
		<view:HypoglycemiaActionPlanStepsView id="hypoglycemiaActionPlanView"/>
		<s:VGroup gap="90" top="150" horizontalCenter="0" horizontalAlign="center">
			<s:Label id="instructionsLabel"/>
			<s:VGroup gap="60" horizontalAlign="center">
				<s:VGroup horizontalAlign="center">
					<s:Label text="If you plan to eat within 1 hour:" styleName="timeCondition"/>
					<s:Label text="Eat 15g of slow carbs now (6 saltine crackers or 3 graham cracker squares)"
							 styleName="carbInstructions"/>
				</s:VGroup>
				<s:VGroup horizontalAlign="center">
					<s:Label text="If you plan to eat after more than 1 hour:" styleName="timeCondition"/>
					<s:Label text="Eat 30g of slow carbs now (1 peanut butter sandwich)" styleName="carbInstructions"/>
				</s:VGroup>
			</s:VGroup>
		</s:VGroup>
		<s:Button id="finishButton" label="Finish" width="160" height="50" bottom="90" horizontalCenter="0"
				  click="finishButton_clickHandler()"/>
	</s:Group>
</tablet:TabletViewBase>
