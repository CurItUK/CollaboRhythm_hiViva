<?xml version="1.0"?>
<!---
 - Copyright 2012 John Moore, Scott Gilroy
 -
 - This file is part of CollaboRhythm.
 -
 - CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 - License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
 - version.
 -
 - CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 - warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 - details.
 -
 - You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
 - <http://www.gnu.org/licenses/>.
-->
<view:HypoglycemiaActionPlanViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
									 xmlns:s="library://ns.adobe.com/flex/spark"
									 xmlns:view="collaboRhythm.plugins.foraD40b.view.*"
									 creationComplete="creationCompleteHandler(event)"
									 implements="collaboRhythm.plugins.schedule.shared.model.IHealthActionInputView"
									 title="Hypoglycemia Action Plan - Step 2: Wait 15 Minutes">
	<fx:Declarations>
		<view:NextStepEarlyPopUp id="nextStepEarlyPopUp"/>
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";

		#recheckLabel {
			fontSize: 36;
		}

		#timerLabel {
			fontSize: 200;
		}
	</fx:Style>
	<fx:Script><![CDATA[
		import collaboRhythm.plugins.foraD40b.model.BloodGlucoseHealthActionInputModel;

		import mx.binding.utils.BindingUtils;
		import mx.events.FlexEvent;
		import mx.managers.PopUpManager;

		import spark.events.PopUpEvent;

		private function creationCompleteHandler(event:FlexEvent):void
		{
			hypoglycemiaWarningView.init(_dataInputModel);

			_dataInputController.startWaitTimer();

			updateTimerLabel(BloodGlucoseHealthActionInputModel.TIMER_COUNT);

			BindingUtils.bindSetter(updateTimerLabel, _dataInputModel, "seconds");
		}

		private function updateTimerLabel(totalSeconds:int):void
		{
			var minutes:int = totalSeconds / 60;
			var seconds:int = totalSeconds % 60;

			if (minutes < 10)
			{
				timerLabel.text = "0" + String(minutes);
			}
			else
			{
				timerLabel.text = String(minutes);
			}

			timerLabel.text = timerLabel.text += ":";

			if (seconds < 10)
			{
				timerLabel.text = timerLabel.text + "0" + String(seconds);
			}
			else
			{
				timerLabel.text = timerLabel.text + String(seconds);
			}

			if (totalSeconds == 0)
			{
				nextStepActionButton.enabled = true;
				nextStepButton.enabled = true;
			}
		}

		private function nextStepEarlyButton_clickHandler():void
		{
			nextStepEarlyPopUp.addEventListener('close', quitHypoglycemiaActionPlanPopUp_closeHandler);
			nextStepEarlyPopUp.open(this, true);
			PopUpManager.centerPopUp(nextStepEarlyPopUp);
		}

		private function quitHypoglycemiaActionPlanPopUp_closeHandler(event:PopUpEvent):void
		{
			if (event.commit)
			{
				_dataInputController.nextStep();
			}
		}
		]]></fx:Script>
	<view:HypoglycemiaActionPlanStepsView id="hypoglycemiaWarningView"/>
	<s:Label id="timerLabel" verticalCenter="0" horizontalCenter="0"/>
	<s:Group id="nextStepEarlyButton" width="160" height="50" bottom="90" horizontalCenter="0"
			 click="nextStepEarlyButton_clickHandler()"/>
	<s:Button id="nextStepButton" label="Next Step" width="160" height="50" bottom="90" horizontalCenter="0"
			  enabled="false" click="nextStepButton_clickHandler()"/>
</view:HypoglycemiaActionPlanViewBase>
