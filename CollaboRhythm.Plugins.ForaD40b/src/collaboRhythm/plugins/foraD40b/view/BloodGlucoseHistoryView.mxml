<?xml version="1.0"?>
<!---
  - Copyright 2012 John Moore, Scott Gilroy
  -
  - This file is part of CollaboRhythm.
  -
  - CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
  - License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
  - version.
  -
  - CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
  - warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
  - details.
  -
  - You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
  - <http://www.gnu.org/licenses/>.
  -->
<tablet:TabletViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:tablet="collaboRhythm.shared.view.tablet.*">
	<fx:Script><![CDATA[
		import collaboRhythm.plugins.foraD40b.controller.BloodGlucoseHealthActionInputController;
		import collaboRhythm.plugins.foraD40b.model.BloodGlucoseHealthActionInputModel;
		import collaboRhythm.plugins.schedule.shared.model.HealthActionInputModelAndController;
		import collaboRhythm.shared.model.healthRecord.document.VitalSign;
		import collaboRhythm.shared.model.healthRecord.document.VitalSignsModel;

		import mx.collections.ArrayCollection;

		import spark.collections.Sort;
		import spark.collections.SortField;

		private var _dataInputModel:BloodGlucoseHealthActionInputModel;
		private var _dataInputController:BloodGlucoseHealthActionInputController;
		[Bindable]
		private var _bloodGlucoseArrayCollection:ArrayCollection;

		override public function set data(value:Object):void
		{
			super.data = value;

			var dataInputModelAndController:HealthActionInputModelAndController = value as
					HealthActionInputModelAndController;

			_dataInputModel = BloodGlucoseHealthActionInputModel(dataInputModelAndController.healthActionInputModel);
			_dataInputController = BloodGlucoseHealthActionInputController(dataInputModelAndController.healthActionInputController);

			_bloodGlucoseArrayCollection = _dataInputModel.healthActionModelDetailsProvider.record.vitalSignsModel.vitalSignsByCategory[VitalSignsModel.BLOOD_GLUCOSE_CATEGORY];

			var sort:Sort = new Sort();
			sort.fields = [new SortField("dateMeasuredStart", true)];
			_bloodGlucoseArrayCollection.sort = sort;
			_bloodGlucoseArrayCollection.refresh();
		}


		private function bloodGlucoseHistoryList_changeHandler():void
		{
			var bloodGlucoseVitalSign:VitalSign = bloodGlucoseHistoryList.selectedItem;
			if (bloodGlucoseVitalSign.triggeredHealthActionResults.length != 0)
			{
				_dataInputController.showHypoglycemiaActionPlanSummaryView(bloodGlucoseVitalSign);
			}
		}
		]]></fx:Script>
	<s:List id="bloodGlucoseHistoryList" dataProvider="{_bloodGlucoseArrayCollection}" itemRenderer="collaboRhythm.plugins.foraD40b.view.BloodGlucoseItemRenderer" change="bloodGlucoseHistoryList_changeHandler()" width="100%" height="100%"/>
</tablet:TabletViewBase>
