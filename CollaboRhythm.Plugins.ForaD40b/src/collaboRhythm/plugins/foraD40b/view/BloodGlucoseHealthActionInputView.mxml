<?xml version="1.0"?>
<!---
 - Copyright 2012 John Moore, Scott Gilroy
 -
 - This file is part of CollaboRhythm.
 -
 - CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 - License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
 - version.
 -
 - CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 - warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 - details.
 -
 - You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
 - <http://www.gnu.org/licenses/>.
-->
<tablet:TabletViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:view="collaboRhythm.plugins.foraD40b.view.*"
					   xmlns:tablet="collaboRhythm.shared.view.tablet.*"
					   implements="collaboRhythm.plugins.schedule.shared.model.IHealthActionInputView"
					   creationComplete="creationCompleteHandler(event)"
					   addedToStage="addedToStageHandler()"
					   title="Report Blood Glucose">
	<fx:Declarations>
		<s:Button id="saveActionButton" label="Save" enabled="false" click="saveActionButton_clickHandler()"/>
	</fx:Declarations>
	<fx:Script><![CDATA[
		import collaboRhythm.plugins.foraD40b.controller.BloodGlucoseHealthActionInputController;
		import collaboRhythm.plugins.foraD40b.model.BloodGlucoseHealthActionInputModel;
		import collaboRhythm.plugins.schedule.shared.model.HealthActionInputModelAndController;
		import collaboRhythm.plugins.schedule.shared.model.IHealthActionInputController;

		import mx.binding.utils.BindingUtils;
		import mx.events.FlexEvent;

		[Bindable]
		protected var _dataInputModel:BloodGlucoseHealthActionInputModel;
		protected var _dataInputController:BloodGlucoseHealthActionInputController;

		override public function set data(value:Object):void
		{
			super.data = value;

			var dataInputModelAndController:HealthActionInputModelAndController = value as
					HealthActionInputModelAndController;

			_dataInputModel = BloodGlucoseHealthActionInputModel(dataInputModelAndController.healthActionInputModel);
			_dataInputController = BloodGlucoseHealthActionInputController(dataInputModelAndController.healthActionInputController);

			BindingUtils.bindSetter(setManualBloodGlucose, _dataInputModel, "manualBloodGlucose");
			BindingUtils.bindSetter(setDeviceBloodGlucose, _dataInputModel, "deviceBloodGlucose");
		}

		override protected function createChildren():void
		{
			super.createChildren();
			actionContent.unshift(saveActionButton);
		}

		private function creationCompleteHandler(event:FlexEvent):void
		{
			reportBloodGlucoseView.init(_dataInputModel, _dataInputController);
		}

		private function setManualBloodGlucose(manualBloodGlucose:String):void
		{
			if (manualBloodGlucose == "")
			{
				saveActionButton.enabled = false;
			}
			else if (manualBloodGlucose != "")
			{
				saveActionButton.enabled = true;
			}
		}

		private function setDeviceBloodGlucose(deviceBloodGlucose:int):void
		{
			saveActionButton.enabled = true;
		}

		public function get healthActionInputController():IHealthActionInputController
		{
			return _dataInputController;
		}

		private function addedToStageHandler():void
		{
			addEventListener(KeyboardEvent.KEY_UP, hardwareKeyUpHandler)
		}

		private function hardwareKeyUpHandler(event:KeyboardEvent):void
		{

		}

		override public function homeButton_clickHandler():void
		{
			super.homeButton_clickHandler();
		}

		private function saveActionButton_clickHandler():void
		{
			_dataInputController.submitBloodGlucose(reportBloodGlucoseView.bloodGlucoseTextInput.text);
		}
		]]></fx:Script>
	<view:ReportBloodGlucoseView id="reportBloodGlucoseView"/>
</tablet:TabletViewBase>