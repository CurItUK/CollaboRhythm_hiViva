<?xml version="1.0"?>
<!---
 - Copyright 2012 John Moore, Scott Gilroy
 -
 - This file is part of CollaboRhythm.
 -
 - CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 - License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
 - version.
 -
 - CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 - warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 - details.
 -
 - You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
 - <http://www.gnu.org/licenses/>.
-->
<tablet:TabletViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:tablet="collaboRhythm.shared.view.tablet.*"
					   xmlns:view="collaboRhythm.plugins.foraD40b.view.*"
					   xmlns:sharedView="collaboRhythm.plugins.schedule.shared.view.*"
					   creationComplete="creationCompleteHandler(event)"
					   addedToStage="addedToStageHandler()"
					   implements="collaboRhythm.plugins.schedule.shared.model.IHealthActionInputView"
					   title="Hypoglycemia Action Plan - Step 1: Eat Quick Sugar">
	<fx:Style>
		#instructionsLabel {
			fontSize: 24;
		}
	</fx:Style>
	<fx:Script><![CDATA[
		import collaboRhythm.plugins.foraD40b.controller.BloodGlucoseHealthActionInputController;
		import collaboRhythm.plugins.foraD40b.model.BloodGlucoseHealthActionInputModel;
		import collaboRhythm.plugins.foraD40b.model.QuickSugarItem;
		import collaboRhythm.plugins.schedule.shared.model.HealthActionInputModelAndController;
		import collaboRhythm.plugins.schedule.shared.model.IHealthActionInputController;

		import mx.collections.ArrayCollection;
		import mx.events.FlexEvent;

		[Embed(source="/assets/images/juice.png")]
		public var juiceImageClass:Class;

		[Embed(source="/assets/images/soda.png")]
		public var sodaImageClass:Class;

		[Embed(source="/assets/images/glucoseTablets.png")]
		public var glucoseTabletsImageClass:Class;

		[Embed(source="/assets/images/honey.png")]
		public var honeyImageClass:Class;

		private var _dataInputController:BloodGlucoseHealthActionInputController;
		[Bindable]
		private var _dataInputModel:BloodGlucoseHealthActionInputModel;

		override public function set data(value:Object):void
		{
			super.data = value;

			var dataInputModelAndController:HealthActionInputModelAndController = HealthActionInputModelAndController(value);

			_dataInputModel = BloodGlucoseHealthActionInputModel(dataInputModelAndController.healthActionInputModel);
			_dataInputController = BloodGlucoseHealthActionInputController(dataInputModelAndController.healthActionInputController);
		}

		private function creationCompleteHandler(event:FlexEvent):void
		{
			hypoglycemiaActionPlanView.init(_dataInputModel);

			var imageClassArray:Array = [juiceImageClass, sodaImageClass, glucoseTabletsImageClass, honeyImageClass];
			var textArray:Array = ["Drink a cup of fruit juice", "Drink a cup of (non-diet) soda", "Take 8 glucose tablets", "Eat 30g of other quick sugar"];
			var quickSugarItemArrayCollection:ArrayCollection = new ArrayCollection();

			var index:int = 0;
			for each (var imageClass:Class in imageClassArray)
			{
				var quickSugarItemText:String = textArray[index];

				if (_dataInputModel.glycemicState == BloodGlucoseHealthActionInputModel.HYPOGLYCEMIA)
				{
					quickSugarItemText = quickSugarItemText.replace("a cup", "1/2 cup");
					quickSugarItemText = quickSugarItemText.replace("8", "4");
					quickSugarItemText = quickSugarItemText.replace("30g", "15g");

					if (index == 0)
					{
						if (_dataInputModel.repeatCount == 1)
						{
							instructionsLabel.text = "Choose one for blood glucose < 70 mg/dL"
						}
						else
						{
							instructionsLabel.text = "Choose one for repeat blood glucose < 90 mg/dL"
						}
					}
				}

				var quickSugarItem:QuickSugarItem = new QuickSugarItem(imageClass, quickSugarItemText);
				quickSugarItemArrayCollection.addItem(quickSugarItem);
				index++;
			}

			quickSugarItemList.dataProvider = quickSugarItemArrayCollection;
		}

		private function quickSugarItemList_changeHandler():void
		{
			_dataInputController.pushWaitView();
		}

		private function addedToStageHandler():void
		{
			addEventListener(KeyboardEvent.KEY_UP, hardwareKeyUpHandler)
		}

		private function hardwareKeyUpHandler(event:KeyboardEvent):void
		{
			if (event.keyCode == Keyboard.BACK || event.keyCode == Keyboard.HOME)
			{
				event.stopImmediatePropagation();
				event.preventDefault();
			}
		}

		override public function homeButton_clickHandler():void
		{

		}

		public function get healthActionInputController():IHealthActionInputController
		{
			return _dataInputController;
		}
		]]></fx:Script>
	<view:HypoglycemiaActionPlanView id="hypoglycemiaActionPlanView"/>
	<s:Group width="100%" height="100%">
		<s:VGroup gap="20" top="160" horizontalCenter="0" horizontalAlign="center">
			<s:Label id="instructionsLabel" text="Choose one for blood glucose &#0060; 60 mg/dL"/>
			<s:Group height="400">
				<s:List id="quickSugarItemList" height="100%" width="590"
						itemRenderer="collaboRhythm.plugins.foraD40b.view.QuickSugarItemRenderer"
						verticalScrollPolicy="off" horizontalScrollPolicy="off"
						change="quickSugarItemList_changeHandler()"/>
				<s:Rect width="100%" height="100%">
					<s:stroke>
						<s:SolidColorStroke color="0x000000"/>
					</s:stroke>
				</s:Rect>
			</s:Group>
		</s:VGroup>
	</s:Group>
</tablet:TabletViewBase>
