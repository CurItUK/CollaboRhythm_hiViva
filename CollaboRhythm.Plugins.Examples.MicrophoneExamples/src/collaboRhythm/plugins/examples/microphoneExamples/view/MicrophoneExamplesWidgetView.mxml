<?xml version="1.0" encoding="utf-8"?>
<!--
////////////////////////////////////////////////////////////////////////////////
//
//  ADOBE SYSTEMS INCORPORATED
//  Copyright 2009 Adobe Systems Incorporated
//  All Rights Reserved.
//
//  NOTICE: Adobe permits you to use, modify, and distribute this file
//  in accordance with the terms of the license agreement accompanying it.
//
////////////////////////////////////////////////////////////////////////////////
-->
<s:Group 
	xmlns:fx="http://ns.adobe.com/mxml/2009" 
	xmlns:s="library://ns.adobe.com/flex/spark" 
	xmlns:mx="library://ns.adobe.com/flex/mx"
	xmlns:view="view.*"
	showEffect="Fade" hideEffect="Fade"
	width="460" height="210"
	creationComplete="showMain();"
	>
	
	<s:states>
		<s:State name="sampleMic" />
		<s:State name="pitchDetection" />
		<s:State name="info" />
	</s:states>
	
	
	<s:transitions>
		<s:Transition toState="pitchDetection">    
			<s:Fade alphaFrom="0.0" alphaTo="1.0" duration="600" 
						targets="{[pnlTuner,txtExample]}"/>                
		</s:Transition>    
		<s:Transition toState="sampleMic">    
			<s:Fade alphaFrom="0.0" alphaTo="1.0" duration="600" 
					targets="{[pnlMic,txtExample]}"/>                
		</s:Transition>    
		
		<s:Transition toState="info">    
			<s:Fade alphaFrom="0.0" alphaTo="1.0" duration="600" 
					targets="{[pnlInfo,txtExample]}"/>                
		</s:Transition> 
	</s:transitions>
	
	<fx:Style source="embed_assets/stylesheet_common.css" />
	<fx:Script>
		<![CDATA[
			import collaboRhythm.plugins.examples.microphoneExamples.model.MicrophoneExamplesModel;
			
			import flash.events.NativeWindowBoundsEvent;

			private var examples:Array = ["mic", "tuner"]
			private var movingReferenceEvent:Event;
			private var _model:MicrophoneExamplesModel;
			
			[Bindable]
			public var applicationVersion:String = "(v1.18)";
			
			[Bindable]
			public function get model():MicrophoneExamplesModel
			{
				return _model;
			}

			public function set model(value:MicrophoneExamplesModel):void
			{
				_model = value;
			}

			/**
			 * 	Display the custom chrome.
			 */
			private function showMain():void
			{
				var descriptor:XML = NativeApplication.nativeApplication.applicationDescriptor;
				var ns:Namespace = descriptor.namespaceDeclarations()[0];
				applicationVersion = "(v"+descriptor.ns::version+")";
			}
			
			private function startMove(event:MouseEvent):void
			{
			}
			
			private function changeView(view:String):void
			{
				micSelector.visible = false;
				if (view == "left")
				{
					model.lastViewIndex = (model.lastViewIndex-1 < 0) ? 0 : model.lastViewIndex-1;
					view = examples[model.lastViewIndex];
				}
				else if (view == "right")
				{
					model.lastViewIndex = (model.lastViewIndex+1 >= examples.length) ? model.lastViewIndex : model.lastViewIndex+1;
					view = examples[model.lastViewIndex];
				}
				if (view == "info" && currentState == "info")
				{
					view = "mic";
				}
				
				if (view != "info")
				{
					btnInfo.selected = false;
				}
				else
				{
					model.viewName = "(Application Info)";
					currentState = "info";
				}
				if (view == "mic")
				{
					model.viewName = "(Record & Playback)";
					currentState = "sampleMic";
				}
				if (view == "tuner")
				{
					model.viewName = "(Pitch Detection)";
					currentState = "pitchDetection";
				}
				
			}		
		]]>
	</fx:Script>
	
	<!-- Layout for top Bar -->
	<s:SkinnableContainer 
		skinClass="controls.skins.TopBarSkin" width="100%">
		<s:Group y="8" mouseDown="startMove(event)" mouseUp="movingReferenceEvent = null">
			<s:BitmapImage source="@Embed('/embed_assets/mic16.png')" />
			<s:Label text="MICROPHONE" styleName="micExTitleText" x="18" y="3" backgroundAlpha="0" />
			<s:Label id="txtExample" text="{model.viewName}" x="100" y="3" styleName="micExTitleTextGrey" backgroundAlpha="0" />
		</s:Group>
		<s:HGroup mouseDown="startMove(event)" mouseUp="movingReferenceEvent = null"
			verticalAlign="bottom" width="100%" horizontalAlign="right" gap="10">
			<s:Button styleName="leftArrowButton" click="changeView('left')" />
			<s:Button styleName="rightArrowButton" click="changeView('right')" />
			<s:ToggleButton id="btnInfo" styleName="helpButton" click="changeView('info')"
				tabEnabled="false" toolTip="Information" />
		</s:HGroup>
	</s:SkinnableContainer>
	
	<view:SampleMicPanel id="pnlMic" left="0" top="40" right="0" bottom="0" 
						 includeIn="sampleMic"
						 micSelector="{micSelector}"
						 model="{model.sampleMicPanelModel}"
						 />
	<view:PitchDetection id="pnlTuner" left="0" top="40" right="0" bottom="0" 
						 includeIn="pitchDetection"
						 micSelector="{micSelector}" />
	<view:InformationPanel id="pnlInfo" left="0" top="40" right="0" bottom="0"
						   paddingLeft="10" paddingTop="8" paddingRight="10"
						   includeIn="info"
			applicationVersion="{applicationVersion}" />
	
	<view:InputDeviceSelector id="micSelector" left="40" right="40" top="66" bottom="24" 
							  visible="false"
							  model="{model.inputDeviceSelectorModel}"/>

</s:Group>
