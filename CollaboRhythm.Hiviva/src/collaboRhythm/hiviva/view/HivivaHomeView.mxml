<?xml version="1.0"?>
<hiviva:HivivaViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:hiviva="collaboRhythm.shared.view.hiviva.*"
					   actionBarVisible="false"
					   backgroundAlpha="0">
	<fx:Script><![CDATA[

		import collaboRhythm.hiviva.controller.HivivaApplicationController;
		import collaboRhythm.hiviva.controller.HivivaLocalStoreController;
		import collaboRhythm.hiviva.model.HivivaLocalStoreService;

		import mx.core.IVisualElementContainer;
		import mx.core.UIComponent;

		import starling.core.Starling;
		import starling.utils.HAlign;
		import starling.utils.VAlign;

		public static const RECORD_BACKGROUND_COLOR:uint = 0xE6E7E8;

		private var _widgetContainers:Vector.<IVisualElementContainer> = new Vector.<IVisualElementContainer>();
		private var _hivivaLocalStoreController:HivivaLocalStoreController;
		private var _applicationProfileClass:Class; //HCP or Patient , load Starling main class as per profile.

		private var starFW:Starling;

		override protected function createChildren():void
		{
			super.createChildren();
			if (_hivivaApplicationController && _activeRecordAccount)
			{
				init();
				(_hivivaApplicationController as HivivaApplicationController).useWidgetContainers();
			}
		}

		public function init():void
		{
			_widgetContainers.push(mainWidgetsGroup);
			_widgetContainers.push(buttonWidgetsGroup);
			initStartupViews();
		}

		private function initStartupViews():void
		{
			trace("initStartupViews " + hivivaLocalStoreController.service.appDataVO._userAppType);
			if(hivivaLocalStoreController.service.appDataVO._userAppType == HivivaLocalStoreService.APP_FIRST_TIME_USE)
			{
				initSplashLogin();
			} else
			{
				initSplashNoLogin();
			}
		}

		private function initSplashLogin():void
		{
			var holder:UIComponent = new UIComponent();
			var splash:SplashUI = new SplashUI();
			splash.hcpBtn.addEventListener(MouseEvent.CLICK, splashBtnHandler);
			splash.patientBtn.addEventListener(MouseEvent.CLICK, splashBtnHandler);
			holder.addChild(splash);
			holder.name = "SplashHolder";
			this.addElement(holder);
			trace(holder);

		}

		private function splashBtnHandler(e:Event):void
		{
			//var splash:SplashUI = e.currentTarget.parent;
			//var holder:UIComponent = this.getEl


		}



		private function initSplashNoLogin():void
		{
			var holder:UIComponent = new UIComponent();

			var sprite:Sprite = new Sprite();
			sprite.graphics.beginFill(0xff00000 , 1);
			sprite.graphics.drawRect(0,0,100,100);
			sprite.graphics.endFill();
			holder.addChild(sprite);
			this.addElement(holder);

		}

		private function initStarling():void
		{
			trace("Starling Init");
			starFW = new Starling(Main , stage);
			starFW.enableErrorChecking = true;
			starFW.showStats = true;
			starFW.showStatsAt(HAlign.RIGHT, VAlign.TOP);
			starFW.start();
			trace(starFW.viewPort);
		}

		public function get widgetContainers():Vector.<IVisualElementContainer>
		{
			return _widgetContainers;
		}

		public function get hivivaLocalStoreController():HivivaLocalStoreController
		{
			return (_hivivaApplicationController as HivivaApplicationController).hivivaLocalStoreController;
		}

		]]></fx:Script>


	<s:VGroup width="100%" height="100%">
		<s:HGroup width="100%" height="100%" gap="0" paddingLeft="10" paddingRight="10" paddingTop="10"
				  paddingBottom="10" verticalAlign="middle">
			<s:HGroup id="mainWidgetsGroup" width="100%" height="100%" gap="20"/>
			<s:VGroup id="buttonWidgetsGroup" width="110" gap="70"/>
		</s:HGroup>
	</s:VGroup>
</hiviva:HivivaViewBase>
