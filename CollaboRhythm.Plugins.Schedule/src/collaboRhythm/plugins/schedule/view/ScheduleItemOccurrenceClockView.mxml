<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:sharedView="collaboRhythm.plugins.schedule.shared.view.*">
	<fx:Style>
		#additionalAdherenceInformationLabel {
			fontSize: 24;
			fontWeight: bold;
		}
	</fx:Style>
	<fx:Script>
        <![CDATA[
		import collaboRhythm.plugins.schedule.model.ScheduleModel;
		import collaboRhythm.plugins.schedule.shared.model.IHealthActionListViewAdapter;
		import collaboRhythm.shared.model.healthRecord.document.ScheduleItemOccurrence;

		import mx.core.IVisualElement;

		import spark.components.Image;
		import spark.filters.GlowFilter;

		[Bindable]
		private var _scheduleItemOccurrence:ScheduleItemOccurrence;

		public function init(scheduleItemOccurrence:ScheduleItemOccurrence, scheduleModel:ScheduleModel):void
		{
			_scheduleItemOccurrence = scheduleItemOccurrence;

			var scheduleItemOccurrenceReportingViewAdapter:IHealthActionListViewAdapter = scheduleModel.healthActionListViewAdapterFactory.createScheduledHealthActionViewAdapter(_scheduleItemOccurrence,
					scheduleModel);

			if (scheduleItemOccurrenceReportingViewAdapter)
			{
				var customView:IVisualElement = scheduleItemOccurrenceReportingViewAdapter.createCustomView();
				if (customView)
				{
					imageRegion.addElement(customView);
				}
				else
				{
					var image:Image = scheduleItemOccurrenceReportingViewAdapter.createImage();
					if (image)
					{
						image.percentWidth = 100;
						image.percentHeight = 100;
						image.smooth = true;
						imageRegion.addElement(image);
					}
				}
				imageRegion.left = 0;
				imageRegion.right = 0;
				imageRegion.top = 0;
				imageRegion.bottom = 0;


				if (scheduleItemOccurrenceReportingViewAdapter.additionalAdherenceInformation &&
						scheduleItemOccurrenceReportingViewAdapter.additionalAdherenceInformation != "...")
				{
					additionalAdherenceInformationLabel.text = scheduleItemOccurrenceReportingViewAdapter.additionalAdherenceInformation;
					additionalAdherenceInformationLabel.visible = true;
				}
				else
				{
					adherenceImage.verticalCenter = 0;
				}
			}
		}

		public function get scheduleItemOccurrence():ScheduleItemOccurrence
		{
			return _scheduleItemOccurrence;
		}

		public function set scheduleItemOccurrence(value:ScheduleItemOccurrence):void
		{
			_scheduleItemOccurrence = value;
		}
		]]>
    </fx:Script>

	<s:Group id="imageContainerGroup" width="100%" height="100%">
		<s:Group id="imageRegion"/>
	</s:Group>


	<s:Group id="adherenceImage" width="70%" height="70%" horizontalCenter="0">
		<sharedView:AdherenceCheck width="{adherenceImage.width}" height="{adherenceImage.height}"
					  filters="{[new GlowFilter(0xFFFFFF, 0.7, this.width / 8, this.width / 8, this.width / 8)]}"
					  visible="{_scheduleItemOccurrence.adherenceItem != null}"/>
	</s:Group>

	<s:Label id="additionalAdherenceInformationLabel" visible="false" bottom="0" horizontalCenter="-4"
			 filters="{[new GlowFilter(0xFFFFFF, 0.7, this.width / 8, this.width / 8, this.width / 8)]}"/>

</s:Group>
