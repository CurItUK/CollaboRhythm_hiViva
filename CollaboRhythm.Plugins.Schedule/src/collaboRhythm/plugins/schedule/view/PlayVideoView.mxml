<?xml version="1.0" encoding="utf-8"?>
<!--~
~ Copyright 2011 John Moore, Scott Gilroy
~
~ This file is part of CollaboRhythm.
~
~ CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
~ License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
~ version.
~
~ CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
~ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
~ details.
~
~ You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
~ <http://www.gnu.org/licenses/>.
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 addedToStage="addedToStage()"
		 removedFromStage="removedFromStage()"
		 creationComplete="creationComplete()"
		 width="100%" height="100%">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			private var _netConnection:NetConnection;
			private var _netStream:NetStream;
			
			private var _video:Video;
			
			private function creationComplete():void
			{
				_netConnection = new NetConnection();
				_netConnection.addEventListener(NetStatusEvent.NET_STATUS, netConnectionConnectHandler);
				_netConnection.connect("rtmp://18.85.55.246/recordings");
				
				_video = new Video(480, 360);
				videoUIComponent.addChild(_video);
			}
			
			private function addedToStage():void
			{
				stage.addEventListener(KeyboardEvent.KEY_DOWN, stage_keyDownHandler);
			}
			
			private function removedFromStage():void
			{
				stage.removeEventListener(KeyboardEvent.KEY_DOWN, stage_keyDownHandler);
			}
			
			private function stage_keyDownHandler(event:KeyboardEvent):void
			{
				if (event.keyCode == Keyboard.BACK)
				{
					event.preventDefault();
					event.stopImmediatePropagation();
					_netStream.close();
					dispatchEvent(new ScheduleWidgetViewEvent(ScheduleWidgetViewEvent.PLAY_VIDEO_VIEW_BACK));
				}
			}
			
			private function netConnectionConnectHandler (e:NetStatusEvent):void
			{
				if (e.info.code=="NetConnection.Connect.Success")
				{
					_netStream = new NetStream(_netConnection);
					var metaSniffer:Object = new Object();
					_netStream.client = metaSniffer;
					metaSniffer.onMetaData = getMeta;
					_video.attachNetStream(_netStream);
					_netStream.play("test");
				}
			}
			
			private function getMeta (mdata:Object):void
			{
				//Dummy to avoid error
			}

			
		]]>
	</fx:Script>
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="0xAAAAAA"/>
		</s:fill>
	</s:Rect>
	<mx:UIComponent id="videoUIComponent" width="480" height="360" horizontalCenter="0" verticalCenter="0"/>
</s:Group>
