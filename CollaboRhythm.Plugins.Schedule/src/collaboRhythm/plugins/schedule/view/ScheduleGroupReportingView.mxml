<?xml version="1.0" encoding="utf-8"?>
<!--~
~ Copyright 2011 John Moore, Scott Gilroy
~
~ This file is part of CollaboRhythm.
~
~ CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
~ License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
~ version.
~
~ CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
~ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
~ details.
~
~ You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
~ <http://www.gnu.org/licenses/>.
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="creationCompleteHandler()"
		 width="100%" height="100%">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
		import collaboRhythm.plugins.schedule.model.ScheduleModel;
		import collaboRhythm.plugins.schedule.model.ScheduleReportingModel;
		import collaboRhythm.plugins.schedule.shared.model.ScheduleGroup;
		import collaboRhythm.plugins.schedule.shared.view.ScheduleItemReportingViewBase;
		import collaboRhythm.shared.model.healthRecord.document.ScheduleItemOccurrence;

		import mx.binding.utils.BindingUtils;

		private var _scheduleModel:ScheduleModel;
		[Bindable]
		private var _scheduleReportingModel:ScheduleReportingModel;
		private var _creationComplete:Boolean;
		private var _activeAccountId:String;

		public function init(scheduleModel:ScheduleModel, activeAccountId:String):void
		{
			_scheduleModel = scheduleModel;
			_activeAccountId = activeAccountId;

			_scheduleReportingModel = _scheduleModel.scheduleReportingModel;

			BindingUtils.bindSetter(currentScheduleGroup_changeHandler, _scheduleReportingModel,
									"currentScheduleGroup");
		}

		private function creationCompleteHandler():void
		{
			if (_scheduleReportingModel.currentScheduleGroup)
			{
				updateScheduleItemOccurrences(_scheduleReportingModel.currentScheduleGroup);
			}
			_creationComplete = true;
		}

		private function currentScheduleGroup_changeHandler(currentScheduleGroup:ScheduleGroup):void
		{
			if (_creationComplete && currentScheduleGroup)
			{
				updateScheduleItemOccurrences(currentScheduleGroup);
			}
		}

		// TODO: Reimplement the proper sorting so that the blood pressure measurement is first in the list and that a list is used rather than a vgroup
		private function updateScheduleItemOccurrences(currentScheduleGroup:ScheduleGroup):void
		{
			scheduleItemsGroup.removeAllElements();
			createScheduleItemReportingViews(currentScheduleGroup, false);
			createScheduleItemReportingViews(currentScheduleGroup, true);
		}

		private function createScheduleItemReportingViews(currentScheduleGroup:ScheduleGroup,
														  excludeEquipmentScheduleItem:Boolean):void
		{
			for each (var scheduleItemOccurrence:ScheduleItemOccurrence in currentScheduleGroup.scheduleItemsOccurrencesCollection)
			{
				if (xor(scheduleItemOccurrence.scheduleItem.name.text == "FORA D15b", excludeEquipmentScheduleItem))
				{
					var scheduleItemReportingView:ScheduleItemReportingViewBase = _scheduleModel.viewFactory.createScheduleItemReportingView(scheduleItemOccurrence,
																																			 _scheduleModel.scheduleReportingModel,
																																			 _activeAccountId,
																																			 _scheduleReportingModel.handledInvokeEvents);
					scheduleItemsGroup.addElement(scheduleItemReportingView);
				}
			}
		}

		public function xor(lhs:Boolean, rhs:Boolean):Boolean
		{
			return !( lhs && rhs ) && ( lhs || rhs );
		}
		]]>
	</fx:Script>
	<s:VGroup id="scheduleItemsGroup" width="100%" height="100%" gap="0"/>
</s:Group>
