<?xml version="1.0" encoding="utf-8"?>
<!--~
  ~ Copyright 2011 John Moore, Scott Gilroy
  ~
  ~ This file is part of CollaboRhythm.
  ~
  ~ CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
  ~ License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
  ~ version.
  ~
  ~ CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
  ~ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
  ~ details.
  ~
  ~ You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
  ~ <http://www.gnu.org/licenses/>.
  -->
<s:VGroup xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="290" height="800"
		 clipAndEnableScrolling="true"
		 resize="resizeHandler(event)"
		 creationComplete="creationCompleteHandler(event)"
		 xmlns:view="collaboRhythm.plugins.cataractMap.view.*"
		>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";

	</fx:Style>
	<fx:Script>
		<![CDATA[
		import collaboRhythm.plugins.cataractMap.model.CataractMapModel;
		import collaboRhythm.plugins.cataractMap.model.SimulationModel;

		import mx.events.FlexEvent;
		import mx.events.ResizeEvent;


		[Bindable]
		private var _simulationModel:SimulationModel;
		[Bindable]
		private var _cataractMapModel:CataractMapModel;


		public function initializeModel(simulationModel:SimulationModel, cataractMapModel:CataractMapModel):void
		{
			_simulationModel = simulationModel;
			_cataractMapModel = cataractMapModel;
		}

		public function refresh():void
		{

		}

		private function resizeChildren():void
		{
			if (this.height > 0 && this.width > 0)
			{
			}
		}

		protected function resizeHandler(event:ResizeEvent):void
		{
			resizeChildren();
		}

		protected function creationCompleteHandler(event:FlexEvent):void
		{
			resizeChildren();
		}

		private function percentOfRange(value:Number, min:Number, max:Number):Number
		{
			return Math.max(0, Math.min(1, (value - min) / (max - min)));
		}
		]]>
	</fx:Script>
	<view:CataractMapDiagram id="cataractMapDiagram" width="100%" height="280" densityMap="{_simulationModel.cataractMapDataItem.densityMap}"/>
	<s:Group width="100%">
		<mx:Image id="nightImage01" width="100%" source="@Embed('/assets/images/nite01_rd_sharp.png')" scaleContent="true" smoothBitmapContent="true"/>
		<mx:Image id="nightImage02" width="100%" source="@Embed('/assets/images/nite02_rd_all.png')" scaleContent="true" smoothBitmapContent="true" alpha="{percentOfRange(_simulationModel.cataractMapDataItem.densityMapMax, 1, 5)}"/>
		<mx:Image id="nightImage03" width="100%" source="@Embed('/assets/images/nite03_rd_blur.png')" scaleContent="true" smoothBitmapContent="true" alpha="{percentOfRange(_simulationModel.cataractMapDataItem.densityMapMax, 5, 9)}"/>
	</s:Group>
</s:VGroup>
