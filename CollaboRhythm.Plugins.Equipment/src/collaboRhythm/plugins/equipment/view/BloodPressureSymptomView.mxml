<?xml version="1.0"?>
<!--~
~ Copyright 2011 John Moore, Scott Gilroy
~
~ This file is part of CollaboRhythm.
~
~ CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
~ License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
~ version.
~
~ CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
~ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
~ details.
~
~ You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
~ <http://www.gnu.org/licenses/>.
-->
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:images="assets.images.*"
		 width="100%" height="100%">
	<s:states>
		<s:State name="hypotension"/>
		<s:State name="hypertension"/>
	</s:states>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";

		#warningText {
			font-size: 40;
		}

		.warningLabel {
			font-size: 28;
		}

		.symptomText {
			font-size: 40;
		}

		#noSymptomButton {
			font-size: 50;
		}
	</fx:Style>
	<fx:Script><![CDATA[
		import collaboRhythm.plugins.schedule.shared.view.ScheduleItemReportingViewEvent;
		import collaboRhythm.shared.model.healthRecord.document.AdherenceItem;
		import collaboRhythm.shared.model.healthRecord.document.ScheduleItemOccurrence;

		import spark.events.IndexChangeEvent;

		private var _scheduleItemOccurrence:ScheduleItemOccurrence;
		private var _adherenceItem:AdherenceItem;
		private var _measurementsFromDeviceInitial:int;
		private var _handledInvokeEvents:Vector.<String>;

		public function init(scheduleItemOccurrence:ScheduleItemOccurrence, adherenceItem:AdherenceItem,
							 measurementsFromDeviceInitial:int, handledInvokeEvents:Vector.<String>):void
		{
			_scheduleItemOccurrence = scheduleItemOccurrence;
			_adherenceItem = adherenceItem;
			_measurementsFromDeviceInitial = measurementsFromDeviceInitial;
			_handledInvokeEvents = handledInvokeEvents;

		}

		private function symptomListChangeHandler(event:IndexChangeEvent):void
		{
			var bloodPressuerEmergencyView:BloodPressureEmergencyView = new BloodPressureEmergencyView();
			bloodPressuerEmergencyView.init(_scheduleItemOccurrence, _adherenceItem);
			bloodPressuerEmergencyView.currentState = currentState;
			dispatchEvent(new ScheduleItemReportingViewEvent(ScheduleItemReportingViewEvent.ADHERENCE_ITEM_INCOMPLETE,
															 _scheduleItemOccurrence, _adherenceItem,
															 bloodPressuerEmergencyView));
		}

		private function noSymptomButtonClickHandler(event:MouseEvent):void
		{
			var bloodPressureReportingView:BloodPressureReportingView = new BloodPressureReportingView();
			bloodPressureReportingView.init(_scheduleItemOccurrence, _adherenceItem, _handledInvokeEvents, true,
											_measurementsFromDeviceInitial);
			dispatchEvent(new ScheduleItemReportingViewEvent(ScheduleItemReportingViewEvent.ADHERENCE_ITEM_INCOMPLETE,
															 _scheduleItemOccurrence, _adherenceItem,
															 bloodPressureReportingView));
		}
		]]></fx:Script>
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="#CCCCCC"/>
		</s:fill>
	</s:Rect>
	<s:VGroup left="10" right="10" top="10" bottom="10" gap="15">
		<s:HGroup gap="15">
			<images:warning width="100" height="100"/>
			<s:VGroup>
				<s:Label id="warningText" text="Warning:"/>
				<s:Label text="Your blood pressure may be too low." styleName="warningLabel"
						 includeIn="hypotension"/>
				<s:Label text="Your blood pressure may be too high." styleName="warningLabel"
						 includeIn="hypertension"/>
				<s:Label text="Do you have any of these symptoms?" styleName="warningLabel"/>
			</s:VGroup>
		</s:HGroup>
		<s:List id="hypotensionSymptomList" width="100%" change="symptomListChangeHandler(event)"
				includeIn="hypotension" styleName="symptomText" skinClass="spark.skins.spark.ListSkin">
			<mx:ArrayCollection>
				<fx:String>dizziness or lightheadedness</fx:String>
				<fx:String>fainting</fx:String>
				<fx:String>difficulty concentrating</fx:String>
				<fx:String>blurry vision</fx:String>
				<fx:String>nausea</fx:String>
				<fx:String>cold/clammy skin</fx:String>
				<fx:String>rapid/shallow breathing</fx:String>
				<fx:String>severe fatigue or depression</fx:String>
				<fx:String>severe thirst</fx:String>
				<fx:String>other worrisome symptom</fx:String>
			</mx:ArrayCollection>
		</s:List>
		<s:List id="hypertensionSymptomList" width="100%" change="symptomListChangeHandler(event)"
				includeIn="hypertension"
				styleName="symptomText" skinClass="spark.skins.spark.ListSkin">
			<mx:ArrayCollection>
				<fx:String>severe headache</fx:String>
				<fx:String>severe anxiety</fx:String>
				<fx:String>shortness of breath</fx:String>
				<fx:String>other worrisome symptom</fx:String>
			</mx:ArrayCollection>
		</s:List>
	</s:VGroup>
	<s:Button id="noSymptomButton" label="None of the above" left="10" right="10" bottom="10" height="80"
			  click="noSymptomButtonClickHandler(event)"/>
</s:Group>
