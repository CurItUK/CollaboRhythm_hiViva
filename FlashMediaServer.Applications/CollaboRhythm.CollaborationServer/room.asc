application.onAppStart = function ( ) { 
	// Comment out when no longer debugging
	application.allowDebug = true;
	
	// Hash table to keep track of all of the clients connected by username
	application.invitedUserNames = new Array();
	application.enteredClients = new Object();
	application.enteredClientCount = 0;
	application.joinedClients = new Object();
	application.collaborationColors = new Array("0x3cb878", "0xa864a8");
	application.subjectUserColor = "0x00AEEF";
	
	application.disconnectTime = 0;

	trace("room started");
};

function videoStreamConnected (userName) {
	trace("video stream connected: " + userName);
	
	var client = application.joinedClients[userName];	
	client.publishingVideo = true;

	for (var joinedUserName in application.joinedClients) {
		if (joinedUserName != userName) {
			var joinedClient = application.joinedClients[joinedUserName];
			if (joinedClient != null)
			{
				joinedClient.call("playRemoteUserVideoStream", null, userName);
				trace("playing " + userName + " for " + joinedUserName);
			}
		}
	}
}

function connectionTerminated (userName) {
	trace("connection terminated: " + userName);
	
	for (var joinedUserName in application.joinedClients) {
		if (joinedUserName != userName) {
			var joinedClient = application.joinedClients[joinedUserName];
			if (joinedClient != null)
			{
				joinedClient.call("connectionTerminated", null, userName);
				trace("disconnecting " + userName + " from " + joinedUserName);
			}
		} else {
			application.joinedClients[userName] == null;
		}
	}
}

function collaborationSynchronizationHandler(userName, synchronizeFunction, synchronizeDataName, sychronizeDataByteArray)
{
	for (var joinedUserName in application.joinedClients) {
		if (joinedUserName != userName) {
			var joinedClient = application.joinedClients[joinedUserName];
			if (joinedClient != null)
			{
				joinedClient.call("receiveCollaborationSynchronization", null, userName, synchronizeFunction, synchronizeDataName, sychronizeDataByteArray);
			}
		}
	}
}

function showFullView (userName, applicationName) {
	for (var joinedUserName in application.joinedClients) {
		if (joinedUserName != userName) {
			var joinedClient = application.joinedClients[joinedUserName];
			if (joinedClient != null)
			{
				joinedClient.call("showFullView", null, applicationName, "remote");
			}
		}
	}
}

function videoStreamInterrupted (userName, disconnectTime)
{
	if (disconnectTime - application.disconnectTime > 1000)
	{
		var client = application.joinedClients[userName];
		client.call("reconnectLocalUserVideoStream", null);
		application.disconnectTime = disconnectTime;
	}
}

function updateUsers (userName, action)
{
	var client = application.enteredClients[userName];
	for (var enteredUserName in application.enteredClients)
	{
		if (enteredUserName != userName)
		{
			var enteredClient = application.enteredClients[enteredUserName];
			if (enteredClient != null)
			{
				if (action == "invited")
				{
					enteredClient.call("invitedUserAdded", null, userName);
				}
				else if (action == "entered")
				{
					enteredClient.call("remoteUserEnteredCollaborationRoom", null, userName, client.collaborationColor);
					client.call("remoteUserEnteredCollaborationRoom", null, enteredUserName, enteredClient.collaborationColor);
					if (application.joinedClients[enteredUserName] != null)
					{
						client.call("remoteUserJoinedCollaborationRoom", null, enteredUserName);
					}
				}
				else if (action == "joined")
				{
					enteredClient.call("remoteUserJoinedCollaborationRoom", null, userName);
					if (enteredClient.publishingVideo == true)
					{
						client.call("playRemoteUserVideoStream", null, enteredUserName);
						trace("playing " + enteredUserName + " for " + userName);	
					}
				}	
				else if (action == "exited")
				{
					trace("letting: " + enteredUserName + " know that " + userName + " exited")
					enteredClient.call("remoteUserExitedCollaborationRoom", null, userName);
				}
			}
		}
	}
}

function addInvitedUser(userName, invitedUserName)
{
	application.invitedUserNames.push(invitedUserName);
	updateUsers(invitedUserName, "invited");
}

function exitCollaborationRoom(userName)
{
	trace("client exited collaboration room: " + userName);
	var client = application.enteredClients[userName];
	if (client != null)
	{
		application.collaborationColors.push(client.collaborationColor);
		
		client.call("localUserExitedCollaborationRoom", null);
		
		application.enteredClients[client.userName] = null;
		application.enteredClientCount -= 1;
		application.joinedClients[client.userName] = null;
		
		trace("number of clients in room: " + application.enteredClientCount);
		
		if (application.enteredClientCount != 0)
		{
			updateUsers(client.userName, "exited");
		}
	}
}

function joinCollaborationRoom(userName)
{
	trace("client joined collaboration room: " + userName);
	var client = application.enteredClients[userName];
	if (client != null)
	{
		application.joinedClients[userName] = client;
		
		client.addInvitedUser = addInvitedUser;
		client.videoStreamConnected = videoStreamConnected;
		client.connectionTerminated = connectionTerminated;
		client.sendCollaborationSynchronization = collaborationSynchronizationHandler;
		client.showFullView = showFullView;
		client.videoStreamInterrupted = videoStreamInterrupted;
	
		client.call("localUserJoinedCollaborationRoom", null);
		updateUsers(userName, "joined");
	}
}

function enterCollaborationRoom(client, userName)
{
	trace("client entered collaboration room: " + userName);	
	application.acceptConnection(client);
	application.enteredClients[userName] = client;
	application.enteredClientCount += 1;
	
	client.joinCollaborationRoom = joinCollaborationRoom;
	client.exitCollaborationRoom = exitCollaborationRoom;
	
	client.userName = userName;
	client.publishingVideo = false;
	if (userName == application.subjectUserName)
	{
		client.collaborationColor = application.subjectUserColor;
	}
	else
	{
		client.collaborationColor = application.collaborationColors.pop();
	}
	
	client.call("localUserEnteredCollaborationRoom", null, client.collaborationColor, application.invitedUsers);
	updateUsers(userName, "entered");
}

// is called when a new client connects to the server
application.onConnect = function(client, userName, passWord, subjectUserName) {

	trace("client connected to room: " + userName);		
	trace(application.enteredClientCount);

	if (application.enteredClientCount == 0)
	{
		trace("password set");
		application.passWord = passWord;
		application.creatorUserName = userName;
		application.subjectUserName = subjectUserName;
		enterCollaborationRoom(client, userName);
		joinCollaborationRoom(userName);
	}
	else
	{
		if (passWord == application.passWord)
		{
			trace("password correct");
			enterCollaborationRoom(client, userName);
			client.joinCollaborationRoom = joinCollaborationRoom;
		}
		else
		{
			trace("password incorrect");
			application.rejectConnection(client, {message: "Password Incorrect"});
			return false;
		}
	}

	return true;
};

application.onDisconnect = function(client)
{
	trace("client disconnected from room: " + client.userName);
	if (application.enteredClientCount == 0)
	{
		application.shutdown();
	}
};