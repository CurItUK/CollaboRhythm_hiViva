<?xml version="1.0"?>
<!---
 - Copyright 2012 John Moore, Scott Gilroy
 -
 - This file is part of CollaboRhythm.
 -
 - CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
 - License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
 - version.
 -
 - CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
 - warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
 - details.
 -
 - You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
 - <http://www.gnu.org/licenses/>.
-->
<tablet:TabletViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
					   xmlns:s="library://ns.adobe.com/flex/spark"
					   xmlns:mx="library://ns.adobe.com/flex/mx"
					   xmlns:tablet="collaboRhythm.shared.view.tablet.*"
					   creationComplete="creationCompleteHandler()"
					   resize="setVideoDisplaySize()"
					   title="Video View">
	<fx:Script><![CDATA[
		import collaboRhythm.shared.collaboration.controller.CollaborationController;
		import collaboRhythm.shared.collaboration.model.AudioVideoOutput;
		import collaboRhythm.shared.collaboration.model.CollaborationLobbyNetConnectionService;

		private var _collaborationController:CollaborationController;
		private var _collaborationLobbyNetConnectionService:CollaborationLobbyNetConnectionService;

		override protected function createChildren():void
		{
			super.createChildren();
			if (_tabletApplicationController)
			{
				_collaborationController = _tabletApplicationController.iCollaborationController as
						CollaborationController;
				_collaborationLobbyNetConnectionService = _collaborationController.collaborationModel.collaborationLobbyNetConnectionService;
			}
		}

		private function creationCompleteHandler():void
		{
			videoDisplay.mx_internal::videoPlayer.attachNetStream(_collaborationLobbyNetConnectionService.netStreamIn);
			videoDisplay.mx_internal::videoPlayer.visible = true;

			var camera:Camera = AudioVideoOutput.getVideoConferencingCamera();
			videoDisplayOut.attachCamera(camera);
			if (_collaborationLobbyNetConnectionService.netStreamOut)
			{
				_collaborationLobbyNetConnectionService.netStreamOut.attachCamera(camera);
			}
			_collaborationLobbyNetConnectionService.playNetStreamIn();
		}

		override protected function removedFromStageHandler():void
		{
			super.removedFromStageHandler();

			videoDisplayOut.attachCamera(null);
			if (_collaborationLobbyNetConnectionService.netStreamOut)
			{
				_collaborationLobbyNetConnectionService.netStreamOut.attachCamera(null);
			}
		}

		private function setVideoDisplaySize():void
		{
			if (this.width > this.height)
			{
				videoDisplay.height = this.height;
				videoDisplay.width = this.height * (4 / 3);
			}
			else
			{
				videoDisplay.width = this.width;
				videoDisplay.height = this.width * (3 / 4);
			}
		}
		]]></fx:Script>
	<s:Group width="100%" height="100%">
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="0x000000"/>
			</s:fill>
		</s:Rect>
		<mx:VideoDisplay id="videoDisplay" horizontalCenter="0" verticalCenter="0"/>
		<s:Group width="320" height="240" right="0" bottom="0">
			<mx:VideoDisplay id="videoDisplayOut" width="100%" height="100%"/>
			<s:Rect width="100%" height="100%">
				<s:stroke>
					<s:SolidColorStroke color="0x000000"/>
				</s:stroke>
			</s:Rect>
		</s:Group>
	</s:Group>
</tablet:TabletViewBase>
