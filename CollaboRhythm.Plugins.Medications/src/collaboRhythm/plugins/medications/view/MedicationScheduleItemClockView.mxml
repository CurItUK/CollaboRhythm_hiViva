<?xml version="1.0" encoding="utf-8"?>
<!--~
  ~ Copyright 2011 John Moore, Scott Gilroy
  ~
  ~ This file is part of CollaboRhythm.
  ~
  ~ CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
  ~ License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
  ~ version.
  ~
  ~ CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
  ~ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
  ~ details.
  ~
  ~ You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
  ~ <http://www.gnu.org/licenses/>.
  -->
<view:ScheduleItemClockViewBase xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:view="collaboRhythm.plugins.schedule.shared.view.*"
		 xmlns:images="assets.images.*"
		 width="20" height="20">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
		import collaboRhythm.plugins.medications.model.Medication;
		import collaboRhythm.shared.model.MedicationScheduleItem;
		import collaboRhythm.shared.model.healthRecord.document.AdherenceItem;
		import collaboRhythm.shared.model.ScheduleItemBase;
		import collaboRhythm.shared.model.ScheduleItemOccurrence;

		import spark.components.Group;

		import spark.filters.GlowFilter;

		[Bindable]
		private var _medicationScheduleItem:MedicationScheduleItem;
		private var _recurrenceIndex:int;

		public override function init(scheduleItemOccurrence:ScheduleItemOccurrence, parentGroup:Group):void
		{
			super.init(scheduleItemOccurrence, parentGroup);
			_medicationScheduleItem = scheduleItemOccurrence.scheduleItem as MedicationScheduleItem;
		}

		public override function get scheduleItem():ScheduleItemBase
		{
			return _medicationScheduleItem
		}

		public function get medicationScheduleItem():MedicationScheduleItem
		{
			return _medicationScheduleItem;
		}

		public function set medicationScheduleItem(value:MedicationScheduleItem):void
		{
			_medicationScheduleItem = value;
		}

		private function isCheckVisible(adherenceItem:AdherenceItem):Boolean
		{
			return true;
		}
		]]>
	</fx:Script>
	<s:Ellipse width="100%" height="100%">
		<s:fill>
			<s:SolidColor color="#000000"/>
		</s:fill>
	</s:Ellipse>
    <!--visible="{determineCheckVisible(_medicationScheduleItem.adherenceItem)}"-->
	<images:check width="70%" height="70%" verticalCenter="0" horizontalCenter="0" filters="{[new spark.filters.GlowFilter(0xFFFFFF, 0.8, 5, 5)]}" visible="{_scheduleItemOccurrence.adherenceItem &amp;&amp; _scheduleItemOccurrence.adherenceItem.adherence}"/>
	<images:x width="70%" height="70%"  verticalCenter="0" horizontalCenter="0" filters="{[new spark.filters.GlowFilter(0xFFFFFF, 0.8, 5, 5)]}" visible="{_scheduleItemOccurrence.adherenceItem &amp;&amp; !_scheduleItemOccurrence.adherenceItem.adherence}"/>
</view:ScheduleItemClockViewBase>