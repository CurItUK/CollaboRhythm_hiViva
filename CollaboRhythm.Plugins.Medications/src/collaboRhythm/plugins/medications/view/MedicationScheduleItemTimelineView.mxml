<?xml version="1.0" encoding="utf-8"?>
<!--~
  ~ Copyright 2011 John Moore, Scott Gilroy
  ~
  ~ This file is part of CollaboRhythm.
  ~
  ~ CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
  ~ License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
  ~ version.
  ~
  ~ CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
  ~ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
  ~ details.
  ~
  ~ You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
  ~ <http://www.gnu.org/licenses/>.
  -->
<sharedViews:ScheduleItemTimelineViewBase xmlns:fx="http://ns.adobe.com/mxml/2009"
										  xmlns:s="library://ns.adobe.com/flex/spark"
										  xmlns:mx="library://ns.adobe.com/flex/mx"
										  xmlns:sharedViews="collaboRhythm.plugins.schedule.shared.view.*"
										  xmlns:view="collaboRhythm.plugins.medications.view.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";

		#nameLabel {
			font-size: 18;
			font-weight: bold;
		}

		#strengthAndFormLabel {
			font-size: 14;
		}

		#indicationLabel {
			fontSize: 12;
			fontStyle: italic;
		}

		#doseAndRouteLabel {
			fontSize: 14;
			font-weight: bold;
		}
	</fx:Style>
	<fx:Script>
		<![CDATA[
		import collaboRhythm.shared.model.healthRecord.document.MedicationFillsModel;
		import collaboRhythm.shared.model.healthRecord.document.MedicationOrder;
		import collaboRhythm.shared.model.healthRecord.document.MedicationScheduleItem;
		import collaboRhythm.shared.model.healthRecord.document.ScheduleItemBase;
		import collaboRhythm.shared.model.healthRecord.document.ScheduleItemOccurrence;
		import collaboRhythm.shared.model.services.ICurrentDateSource;
		import collaboRhythm.shared.model.services.IMedicationColorSource;
		import collaboRhythm.shared.model.services.WorkstationKernel;

		[Bindable]
		private var _medicationOrder:MedicationOrder;
		[Bindable]
		private var _medicationScheduleItem:MedicationScheduleItem;

		[Bindable]
		private var _medicationName:String;
		[Bindable]
		private var _strength:String;
		[Bindable]
		private var _form:String;
		[Bindable]
		private var _proprietaryName:String = "";

		private var _currentDateSource:ICurrentDateSource;
		private var _medicationColorSource:IMedicationColorSource;

		public override function init(scheduleItemOccurrence:ScheduleItemOccurrence):void
		{
			super.init(scheduleItemOccurrence);
			_medicationScheduleItem = scheduleItemOccurrence.scheduleItem as MedicationScheduleItem;
			_medicationOrder = _medicationScheduleItem.scheduledMedicationOrder;

			if (_medicationOrder)
			{
				// TODO: make parsing more robust and move to a model
				var rxNormRegExp:RegExp = /(24 HR )?([A-Za-z\s]+)(\d+(?:\.\d+)? MG )([A-Za-z\s]+)\s?(\[[A-Za-z]+\])?/;
				var substrings:Array = _medicationOrder.name.text.split(rxNormRegExp);

				_medicationName = substrings[2];
				_strength = substrings[3];
				_form = substrings[4];
				if (substrings[5])
				{
					_proprietaryName = substrings[5];
				}
			}
			else
			{
				// TODO: log instead of just trace
				trace("MedicationScheduleItem " + _medicationScheduleItem.meta.id + " has no MedicationOrder");
			}

			_currentDateSource = WorkstationKernel.instance.resolve(ICurrentDateSource) as ICurrentDateSource;
			_medicationColorSource = WorkstationKernel.instance.resolve(IMedicationColorSource) as IMedicationColorSource;
			pickImage();
		}

		public override function get scheduleItem():ScheduleItemBase
		{
			return _medicationScheduleItem
		}

		private function pickImage():void
		{
			if (_medicationScheduleItem && _medicationScheduleItem.scheduledMedicationOrder && _medicationScheduleItem.scheduledMedicationOrder.medicationFill && _medicationScheduleItem.scheduledMedicationOrder.medicationFill.ndc && _medicationScheduleItem.scheduledMedicationOrder.medicationFill.ndc.text)
			{
				medicationImage.setStyle("loadingImageColor", _medicationColorSource.getMedicationColor(_medicationOrder.medicationFill.ndc.text));	
				medicationImage.source = MedicationFillsModel.MEDICATION_API_URL_BASE + _medicationScheduleItem.scheduledMedicationOrder.medicationFill.ndc.text + "-front.png";
			}
		}
		]]>
	</fx:Script>
	<s:Group id="med" width="100%" height="100%">
		<s:Rect id="background" width="100%" height="100%">
			<s:fill>
				<!--TODO: Reimplement coloring during collaboration-->
				<s:SolidColor color="0xFFFFFF" alpha="0.4"/>
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke color="0xFFFFFF" weight="1" alpha="0.5"/>
			</s:stroke>
		</s:Rect>
		<s:Group left="1" right="1" top="1" bottom="1">
			<s:Group id="imageRegion" width="{this.height}" height="100%">
				<s:Rect width="100%" height="100%">
					<s:fill>
						<s:SolidColor color="0xFFFFFF"/>
					</s:fill>
				</s:Rect>
				<view:MedicationImage id="medicationImage" left="5" right="5" top="5" bottom="5" smooth="true"
						 skinClass="collaboRhythm.plugins.medications.view.MedicationImageSkin"/>
				<!--<s:Ellipse width="22%" height="22%" right="4" top="4">-->
				<!--<s:fill>-->
				<!--<s:SolidColor color="{getMedicationColor(_medicationOrder.name.value)}"/>-->
				<!--</s:fill>-->
				<!--</s:Ellipse>-->
			</s:Group>
			<s:Group id="descriptionRegion" height="100%" left="{imageRegion.width}" right="{buttonRegion.width}">
				<s:VGroup left="5" right="5" top="5" bottom="5" gap="1">
					<s:Label id="nameLabel" text="{_medicationName} {_proprietaryName}" maxDisplayedLines="1" width="100%"/>
					<s:Label id="strengthAndFormLabel" text="{_strength} {_form}" maxDisplayedLines="1" width="100%"/>
					<!--TODO: derive the name of an account owner from the accountId-->
					<s:Label id="indicationLabel" text="Indication: {_medicationOrder.indication}" paddingTop="5" maxDisplayedLines="1" width="100%"/>
					<s:Label id="doseAndRouteLabel"
							 text="Take {_medicationScheduleItem.dose.value} {_medicationScheduleItem.dose.unit.text}(s) by mouth"
							  paddingTop="5" maxDisplayedLines="1" width="100%"/>
				</s:VGroup>
			</s:Group>
			<s:Group id="buttonRegion" right="0" width="{this.height / 2 + 5}" height="100%">
				<mx:Image right="8" verticalCenter="0"
						  source="@Embed(source='/assets/images/gripHorizontalNarrow.png')"/>
			</s:Group>
		</s:Group>
	</s:Group>
</sharedViews:ScheduleItemTimelineViewBase>
