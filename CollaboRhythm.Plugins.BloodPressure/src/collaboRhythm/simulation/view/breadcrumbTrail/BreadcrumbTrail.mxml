<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:scroll="collaboRhythm.view.scroll.*"
		>
	<fx:Metadata>
		[Event(name="backUpLevel", type="collaboRhythm.simulation.view.SimulationLevelEvent")]
	</fx:Metadata>
	<!-- TODO: select (navigate) on mouse up, not mouse down; this will probably require subclassing List -->
	<s:List id="breadcrumbsList"
			horizontalCenter="0"
			borderVisible="false"
			contentBackgroundAlpha="0"
			skinClass="collaboRhythm.simulation.view.breadcrumbTrail.BreadcrumbTrailListSkin"
			itemRenderer="collaboRhythm.simulation.view.breadcrumbTrail.BreadcrumbItemRenderer"
			dataProvider="{breadcrumbsData}"
			change="breadcrumbsList_changeHandler(event)"
			>
		<s:layout>
			<s:HorizontalLayout gap="5" paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5"/>
		</s:layout>
	</s:List>
	<fx:Script><![CDATA[
		import collaboRhythm.simulation.view.SimulationLevelEvent;

		import mx.collections.ArrayCollection;
		import mx.core.UIComponent;

		import spark.events.IndexChangeEvent;

		private var _breadcrumbsData:ArrayCollection = new ArrayCollection();

		[Bindable]
		public function get breadcrumbsData():ArrayCollection
		{
			return _breadcrumbsData;
		}

		public function set breadcrumbsData(value:ArrayCollection):void
		{
			_breadcrumbsData = value;
		}

		private function breadcrumbsList_changeHandler(event:IndexChangeEvent):void
		{
			if (breadcrumbsList.selectedIndex != breadcrumbsData.length - 1)
			{
				dispatchEvent(new SimulationLevelEvent(SimulationLevelEvent.BACK_UP_LEVEL));
			}
		}

		public function get selectedComponent():UIComponent
		{
			if (breadcrumbsList.selectedItem)
				return breadcrumbsList.selectedItem as UIComponent;
			else
				return null;
		}

		public function navigateDownToComponent(componentToShow:UIComponent):void
		{
			breadcrumbsData.addItem(componentToShow);
			breadcrumbsList.selectedItem = componentToShow;
		}

		public function navigateUpToComponent(componentToShow:UIComponent):void
		{
			while (breadcrumbsData.length > 0 && breadcrumbsData[breadcrumbsData.length - 1] != componentToShow)
				breadcrumbsData.removeItemAt(breadcrumbsData.length - 1);
		}
		]]></fx:Script>
</s:Group>
