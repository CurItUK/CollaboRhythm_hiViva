<?xml version="1.0"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx" xmlns:view2="collaboRhythm.shared.view.*"
		 width="100%"
		 height="100%"
		 implements="collaboRhythm.plugins.bloodPressure.view.IBloodPressureWidgetView"
		 xmlns:circulatorysystem="collaboRhythm.plugins.bloodPressure.view.simulation.levels.circulatorySystem.*"
		creationComplete="creationCompleteHandler()">
	<fx:Script><![CDATA[
		import collaboRhythm.plugins.schedule.shared.model.AdherencePerformanceModel;
		import collaboRhythm.shared.apps.bloodPressure.model.BloodPressureModel;
		import collaboRhythm.shared.apps.bloodPressure.model.MedicationComponentAdherenceModel;
		import collaboRhythm.shared.apps.bloodPressure.model.SimulationModel;

		import mx.events.PropertyChangeEvent;
		import mx.logging.ILogger;
		import mx.logging.Log;

		private var _model:BloodPressureModel;

		private var _currentPerformanceModel:AdherencePerformanceModel;
		private var hydrochlorothiazideMedicationModel:MedicationComponentAdherenceModel;
		private var _circulatorySystemSimulationLoader:Loader = new Loader();
		private var _circulatorySystemSimulationMovieClip:MovieClip;
		protected var _logger:ILogger;

		[Bindable]
		public function get model():BloodPressureModel
		{
			return _model;
		}

		public function set model(value:BloodPressureModel):void
		{
			_model = value;
			if (model && model.simulation)
			{
				model.simulation.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE,
												  simulationModel_propertyChangeHandler);
				lookupMedications();
			}
		}

		private function lookupMedications():void
		{
			if (model && model.simulation)
			{
				hydrochlorothiazideMedicationModel = model.simulation.getMedication(BloodPressureModel.RXNORM_HYDROCHLOROTHIAZIDE);
			}
		}

		private function simulationModel_propertyChangeHandler(event:PropertyChangeEvent):void
		{
			if (event.property == "medications")
				lookupMedications();
		}

		private function creationCompleteHandler():void
		{
			_logger = Log.getLogger(getQualifiedClassName(this).replace("::", "."));
		}

		public function refresh():void
		{
		}

		public function get currentPerformanceModel():AdherencePerformanceModel
		{
			return _currentPerformanceModel;
		}

		[Bindable]
		public function set currentPerformanceModel(value:AdherencePerformanceModel):void
		{
			_currentPerformanceModel = value;
		}

		private function getDamage():int
		{
//			if (bloodPressureState == AdherencePerformanceModel.BLOOD_PRESSURE_DANGEROUSLY_HIGH)
//			{
//				return 2;
//			}
//			else if (bloodPressureState == AdherencePerformanceModel.BLOOD_PRESSURE_HIGH && !medicationAdherenceState)
//			{
//				return 2;
//			}
//			else if (bloodPressureState == AdherencePerformanceModel.BLOOD_PRESSURE_HIGH && medicationAdherenceState)
//			{
//				return 1;
//			}
//			else if (!medicationAdherenceState)
//			{
//				return 1;
//			}
//			else if (bloodPressureState == AdherencePerformanceModel.BLOOD_PRESSURE_NORMAL && medicationAdherenceState)
//			{
//				return 0;
//			}
//			else
//			{
//				return 0;
//			}
			return 0;
		}
		]]></fx:Script>

	<s:Group id="simulationContentGroup"
			 width="100%"
			 height="100%"
			>
		<s:layout>
			<view2:ScaleToFitLayout unscaledWidth="{circulatorySystemSimulationView.width}"
									aspectRatioMin="{circulatorySystemSimulationView.width / circulatorySystemSimulationView.height}"
									aspectRatioMax="{circulatorySystemSimulationView.width / circulatorySystemSimulationView.height}"/>
		</s:layout>
		<!--<circulatorysystem:HypertensionCirculatorySystem1 id="hypertensionCirculatorySystem1"
														  visible="{hydrochlorothiazideMedicationModel.concentration &gt;= SimulationModel.HYDROCHLOROTHIAZIDE_GOAL}"
				/>
		<circulatorysystem:HypertensionCirculatorySystem2 id="hypertensionCirculatorySystem2"
														  visible="{hydrochlorothiazideMedicationModel.concentration &lt; SimulationModel.HYDROCHLOROTHIAZIDE_GOAL}"
				/>-->
		<circulatorysystem:HypertensionCirculatorySystemSimulationView id="circulatorySystemSimulationView" width="360" height="600"
				currentDamage="{getDamage()}"/>
	</s:Group>
	<!--TODO: determine a better way to make the widget clickable to launch the full view-->
	<s:Group width="100%" height="100%">
		<s:Rect width="100%" height="100%">
			<s:fill>
				<s:SolidColor color="0xFFFFFF" alpha="0.01"/>
			</s:fill>
		</s:Rect>
	</s:Group>

</s:Group>
