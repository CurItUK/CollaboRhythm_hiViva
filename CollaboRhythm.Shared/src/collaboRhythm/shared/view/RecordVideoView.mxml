<?xml version="1.0" encoding="utf-8"?>
<!--~
~ Copyright 2011 John Moore, Scott Gilroy
~
~ This file is part of CollaboRhythm.
~
~ CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
~ License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
~ version.
~
~ CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
~ warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
~ details.
~
~ You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
~ <http://www.gnu.org/licenses/>.
-->

<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 creationComplete="creationComplete()"
		 enabled="{_collaborationModel.recordVideo}"
		 height="200" xmlns:view="collaboRhythm.shared.view.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		
		#recordVideoButton {
			font-size: 15;
			font-weight: bold;
		}
	</fx:Style>
	<!--<fx:Metadata>-->
		<!--[Event(name="hide", type="collaboRhythm.shared.view.WorkstationViewEvent")]-->
		<!--[Event(name="show", type="collaboRhythm.shared.view.WorkstationViewEvent")]-->
	<!--</fx:Metadata>-->
	<fx:Script>
		<![CDATA[
			import collaboRhythm.shared.controller.CollaborationController;
			import collaboRhythm.shared.model.CollaborationModel;
			import collaboRhythm.shared.model.User;

			private var _collaborationController:CollaborationController;
			[Bindable]
			private var _collaborationModel:CollaborationModel;

			private var _netConnection:NetConnection;
			private var _netStream:NetStream;
			
			private var _camera:Camera;
			private var _video:Video;
			
			private var _recording:Boolean;

            public function init(collaborationController:CollaborationController):void
			{
				_collaborationController = collaborationController;
				_collaborationModel = _collaborationController.collaborationModel;
                _netConnection = _collaborationModel.collaborationLobbyNetConnectionService.netConnection;

			}

     		private function creationComplete():void
			{
                _camera = Camera.getCamera();
			}

            public function showEffectEndHandler():void
            {
                _video = new Video(240, 180);
                videoUIComponent.addChild(_video);
                _video.attachCamera(_camera);
            }

            public function hideEffectEndHandler():void
            {
                videoUIComponent.removeChild(_video);
                _video.attachCamera(null);
            }

			private function recordVideoButtonClickHandler():void
			{
				if (!_recording)
				{
                    _netStream = new NetStream(_netConnection);
					recordVideoButton.visible = false;
					stopVideoButton.visible = true;
					if (_netStream)
					{
						_netStream.attachCamera(_camera);
						_netStream.publish("jking@records.media.mit.edu/1", "record");
					}
					_recording = true;
				}
			}
			
			private function stopVideoButtonClickHandler():void
			{
				if (_recording)
				{
					_netStream.close();
					_recording = false;
					recordVideoButton.visible = true;
					stopVideoButton.visible = false;
					
				}
			}

			private function closeClickHandler():void
			{
				_collaborationController.hideRecordVideoView();
			}
			
		]]>
	</fx:Script>
    <s:Group width="240" height="180" horizontalCenter="0" verticalCenter="0">
        <s:Rect width="100%" height="100%">
            <s:fill>
                <s:SolidColor color="0xCCCCCC"/>
            </s:fill>
        </s:Rect>
        <mx:UIComponent id="videoUIComponent" width="100%" height="100%"/>
        <s:Rect width="100%" height="100%">
            <s:stroke>
                <s:SolidColorStroke color="0x000000"/>
            </s:stroke>
        </s:Rect>
    </s:Group>
	<view:IconButton id="recordVideoButton" icon="@Embed(source='/resources/images/icons/buttonIcons/record.png')" horizontalCenter="350" verticalCenter="0" click="recordVideoButtonClickHandler()" visible="true"/>
	<view:IconButton id="stopVideoButton" icon="@Embed(source='/resources/images/icons/buttonIcons/stop.png')" horizontalCenter="350" verticalCenter="0" click="stopVideoButtonClickHandler()" visible="false"/>
	<view:IconButton id="close" icon="@Embed(source='/resources/images/icons/buttonIcons/closeRecordButtonIcon.png')" verticalCenter="0" right="10" click="closeClickHandler()"/>
</s:Group>
