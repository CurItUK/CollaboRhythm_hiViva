<?xml version="1.0"?>
<!---
  - Copyright 2013 John Moore, Scott Gilroy
  -
  - This file is part of CollaboRhythm.
  -
  - CollaboRhythm is free software: you can redistribute it and/or modify it under the terms of the GNU General Public
  - License as published by the Free Software Foundation, either version 2 of the License, or (at your option) any later
  - version.
  -
  - CollaboRhythm is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied
  - warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
  - details.
  -
  - You should have received a copy of the GNU General Public License along with CollaboRhythm.  If not, see
  - <http://www.gnu.org/licenses/>.
  -->
<s:View xmlns:fx="http://ns.adobe.com/mxml/2009"
		xmlns:s="library://ns.adobe.com/flex/spark"
		addedToStage="addedToStageHandler()"
		removedFromStage="removedFromStageHandler()">
	<s:states>
		<s:State name="debuggingToolsEnabled"/>
		<s:State name="debuggingToolsDisabled"/>
	</s:states>
<!--
	<fx:Declarations>
		<s:DateTimeFormatter id="dateFormatter" dateTimePattern="MM/dd/yyyy"/>
	</fx:Declarations>
-->
	<fx:Script><![CDATA[
		import collaboRhythm.shared.controller.IApplicationControllerBase;
		import collaboRhythm.shared.model.Account;
		import collaboRhythm.shared.view.MenuIcon;

		import mx.core.FlexGlobals;

		[Bindable]
		protected var _hivivaApplicationController:IApplicationControllerBase;

		[Bindable]
		private var _isControllerReady:Boolean;
		protected var _activeAccount:Account;
		[Bindable]
		protected var _activeRecordAccount:Account;
		private var _trackingUrl:String;

		public function get isControllerReady():Boolean
		{
			return _isControllerReady;
		}

		public function set isControllerReady(value:Boolean):void
		{
			_isControllerReady = value;
		}

		private function quitButton_clickHandler(event:MouseEvent):void
		{
			_hivivaApplicationController.exitApplication("quit menu button");
		}

		private function aboutButton_clickHandler(event:MouseEvent):void
		{
			_hivivaApplicationController.showAboutApplicationView();
		}


		[Bindable]
		public function get hivivaApplicationController():IApplicationControllerBase
		{
			return _hivivaApplicationController;
		}

		public function set hivivaApplicationController(value:IApplicationControllerBase):void
		{
			_hivivaApplicationController = value;

			if (_hivivaApplicationController)
			{
				if (_hivivaApplicationController.settings.debuggingToolsEnabled)
				{
					currentState = "debuggingToolsEnabled";
				}
				else
				{
					currentState = "debuggingToolsDisabled";
				}

				isControllerReady = true;
			}
		}

		public function set activeAccount(activeAccount:Account):void
		{
			_activeAccount = activeAccount;
		}

		public function set activeRecordAccount(activeRecordAccount:Account):void
		{
			_activeRecordAccount = activeRecordAccount;
		}

		private function menuButton_clickHandler(event:MouseEvent):void
		{
			FlexGlobals.topLevelApplication.viewMenuOpen = true;
		}

		public function homeButton_clickHandler():void
		{
			_hivivaApplicationController.navigateHome();
		}

		protected function addedToStageHandler():void
		{
			stage.addEventListener(KeyboardEvent.KEY_UP, stage_keyUpHandler);
		}

		protected function removedFromStageHandler():void
		{
			stage.removeEventListener(KeyboardEvent.KEY_UP, stage_keyUpHandler);
		}

		protected function stage_keyUpHandler(event:KeyboardEvent):void
		{

		}

		private function determineEnableVoidingMenuItemLabel(adherenceVoidingEnabled:Boolean):String
		{
			if (adherenceVoidingEnabled)
			{
				return "Disable Voiding";
			}
			else
			{
				return "Enable Voiding";
			}
		}

		public function get trackingUrl():String
		{
			return _trackingUrl;
		}

		public function set trackingUrl(value:String):void
		{
			_trackingUrl = value;
		}
		]]></fx:Script>
	<s:viewMenuItems>
		<s:ViewMenuItem label="About" id="aboutButton" click="aboutButton_clickHandler(event)"/>
		<s:ViewMenuItem label="Quit" id="quitButton" click="quitButton_clickHandler(event)"/>
	</s:viewMenuItems>
	<s:actionContent>
		<s:Button id="menuButton" click="menuButton_clickHandler(event)" icon="{MenuIcon}"/>
	</s:actionContent>
</s:View>
