<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx" contentBackgroundColor="0x3086F1" contentBackgroundAlpha="0.79"
		 width="100%" height="100%" fontSize="18"
		 clipAndEnableScrolling="true"
		 >

	<fx:Style>
		@namespace s "library://ns.adobe.com/flex/spark";
		@namespace mx "library://ns.adobe.com/flex/mx";
		
	</fx:Style>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import collaboRhythm.workstation.model.User;
			
			import mx.collections.XMLListCollection;
			import mx.events.PropertyChangeEvent;

			private static const SEPARATOR_COLOR:String = "0xA7A9AC";

			[Bindable]
			private var _user:User;
			
			public function set user(value:User):void
			{
				_user = value;
				
				if(_user != null)
				{
					setDataProviders();
					_user.contact.addEventListener(PropertyChangeEvent.PROPERTY_CHANGE, contact_handlePropertyChange);
				}
			}   
			
			public function get user():User
			{
				return _user
			}
			
			private function contact_handlePropertyChange(event:PropertyChangeEvent):void
			{
				if (event.property == "rawData")
					setDataProviders();
			}
			
			public function setDataProviders():void
			{
				// but DataGroup requires the dataProvider
				// to be an IList so we wrap the XMLList in an XMLListCollection
				if (_user.contact.rawData != null)
				{
					addressesDataGroup.dataProvider = new XMLListCollection(_user.contact.rawData.address);
					phoneNumbersDataGroup.dataProvider = new XMLListCollection(_user.contact.rawData.phoneNumber);
					emailsDataGroup.dataProvider = new XMLListCollection(_user.contact.rawData.email);
				}
			}
			
			public static function booleanToYesNo(value:Boolean):String
			{
				if (value)
					return "Yes";
				else
					return "No";
			}
			
			public static function fixCapitalization(value:String):String
			{
				var firstChar:String = value.substr(0, 1); 
				var restOfString:String = value.substr(1, value.length); 
				
				return firstChar.toUpperCase() + restOfString.toLowerCase();
			}
		]]>
	</fx:Script>

	<s:Group horizontalCenter="0" y="30">
		<s:filters>
			<s:GlowFilter id="glowFilter"
						  quality="3"
						  alpha="0.2"
						  color="0x000000"
						  blurX="5"
						  blurY="5"
						  strength="5"/>
		</s:filters>
		<s:Rect height="100%" width="100%">
			<s:fill>
				<s:SolidColor color="0xFFFFFF" alpha="0.4"/>
			</s:fill>
			<s:stroke>
				<s:SolidColorStroke color="0xFFFFFF" alpha="0.5"/>
			</s:stroke>
		</s:Rect>
		<s:BorderContainer borderWeight="1" dropShadowVisible="true" x="30" y="-20" height="70">
			<s:filters>
				<s:DropShadowFilter blurX="11" blurY="11" alpha="0.32" distance="5" 
									angle="90" color="0x000000" />
			</s:filters>
			<s:layout>
				<s:VerticalLayout paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5"/>
			</s:layout>
			<s:Label text="{_user.contact.givenName} {_user.contact.familyName}" fontSize="32" fontWeight="bold"/>
			<s:RichText>
				<s:textFlow>	
					<s:TextFlow>
						<s:p>
							<s:span text="{_user.demographics.age}"/> <s:span color="{SEPARATOR_COLOR}">|</s:span>
							<s:span text="{_user.demographics.ethnicity}"/> <s:span color="{SEPARATOR_COLOR}">|</s:span>
							<s:span text="{_user.demographics.gender}"/>
						</s:p>
					</s:TextFlow>
				</s:textFlow>
			</s:RichText>
		</s:BorderContainer>	
		
		<s:VGroup gap="20" paddingTop="60" paddingLeft="15" paddingRight="15" paddingBottom="15">
			<s:HGroup gap="10">
				<s:BorderContainer borderWeight="1">
					<s:layout>
						<s:VerticalLayout/>
					</s:layout>
					<s:filters>
						<s:DropShadowFilter blurX="11" blurY="11" alpha="0.32" distance="5" 
											angle="90" color="0x000000" />
					</s:filters>
					<mx:Image source="{_user.contact.imageURI}" width="300" height="300" smoothBitmapContent="true"/>
				</s:BorderContainer>

				<s:VGroup id="demographicsFullViewGroup">
					<s:DataGroup id="addressesDataGroup">
						<s:layout>
							<s:VerticalLayout/>
						</s:layout>
						<s:itemRenderer>
							<fx:Component>
								<s:DataRenderer>
									<s:VGroup>
										<s:Label>{DemographicsFullView.fixCapitalization(data.@type)} Address</s:Label>
										<s:VGroup paddingLeft="10">
											<s:Label>{data.streetAddress}</s:Label>
											<s:Label>{data.locality}, {data.region} {data.postalCode}</s:Label>
											<s:Label>{data.country}</s:Label>
										</s:VGroup>
									</s:VGroup>
								</s:DataRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:DataGroup>
					<s:DataGroup id="emailsDataGroup">
						<s:layout>
							<s:VerticalLayout/>
						</s:layout>
						<s:itemRenderer>
							<fx:Component>
								<s:DataRenderer>
									<s:VGroup>
										<s:Label>
											{DemographicsFullView.fixCapitalization(data.@type)} E-mail: {data}
										</s:Label>
									</s:VGroup>
								</s:DataRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:DataGroup>
					<s:DataGroup id="phoneNumbersDataGroup">
						<s:layout>
							<s:VerticalLayout/>
						</s:layout>
						<s:itemRenderer>
							<fx:Component>
								<s:DataRenderer>
									<s:VGroup>
										<s:Label>
											{DemographicsFullView.fixCapitalization(data.@type)} Phone: {data}
										</s:Label>
									</s:VGroup>
								</s:DataRenderer>
							</fx:Component>
						</s:itemRenderer>
					</s:DataGroup>
				</s:VGroup>
			</s:HGroup>
			<mx:Form verticalGap="0" paddingLeft="0" paddingRight="0" paddingTop="0" paddingBottom="0">
				<mx:FormItem label="Date of Birth">
					<s:Label text="{_user.demographics.dateOfBirth.toDateString()}"/>
				</mx:FormItem>
				<mx:FormItem label="Languange">
					<s:Label text="{_user.demographics.language}"/>
				</mx:FormItem>
				<mx:FormItem label="Religion">
					<s:Label text="{_user.demographics.religion}"/>
				</mx:FormItem>
				<mx:FormItem label="Education">
					<s:Label text="{_user.demographics.highestEducation}"/>
				</mx:FormItem>
				<mx:FormItem label="Employment Status">
					<s:Label text="{_user.demographics.employmentStatus}"/>
				</mx:FormItem>
				<mx:FormItem label="Employment Industry">
					<s:Label text="{_user.demographics.employmentIndustry}"/>
				</mx:FormItem>
				<mx:FormItem label="Occupation">
					<s:Label text="{_user.demographics.occupation}"/>
				</mx:FormItem>
				<mx:FormItem label="Income">
					<s:Label text="{_user.demographics.income}"/>
				</mx:FormItem>
				<mx:FormItem label="Marital Status">
					<s:Label text="{_user.demographics.maritalStatus}"/>
				</mx:FormItem>
				<mx:FormItem label="Organ Donor">
					<s:Label text="{DemographicsFullView.booleanToYesNo(_user.demographics.organDonor)}"/>
				</mx:FormItem>
			</mx:Form>
			
		</s:VGroup>
	</s:Group>
</s:Group>
