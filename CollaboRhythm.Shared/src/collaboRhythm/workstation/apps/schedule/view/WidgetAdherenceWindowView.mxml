<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" 
		 xmlns:s="library://ns.adobe.com/flex/spark" 
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="100%" height="100%"
		 x="{calculateXPosition(_adherenceGroup.hour, _adherenceGroup.adherenceWindow, _scheduleWidgetView.adherenceGroupsGroup.height)}">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import collaboRhythm.workstation.apps.medications.model.Medication;
			import collaboRhythm.workstation.apps.schedule.model.AdherenceGroup;
			
			import com.leebrimelow.drawing.Wedge;
			
			import mx.binding.utils.BindingUtils;
			import mx.binding.utils.ChangeWatcher;
			
			[Bindable]
			private var _adherenceGroup:AdherenceGroup;
			[Bindable]
			private var _scheduleWidgetView:ScheduleWidgetView;
			
			public function get scheduleWidgetView():ScheduleWidgetView
			{
				return _scheduleWidgetView;
			}

			public function set scheduleWidgetView(value:ScheduleWidgetView):void
			{
				_scheduleWidgetView = value;
			}

			public function get adherenceGroup():AdherenceGroup
			{
				return _adherenceGroup;
			}
			
			public function set adherenceGroup(value:AdherenceGroup):void
			{
				_adherenceGroup = value;
				var stackingUpdatedChangeWatcher:ChangeWatcher = BindingUtils.bindSetter(stackingUpdateHandler, _adherenceGroup, "stackingUpdated");
			}
			
			private function calculateXPosition(hour:Number, adherenceWindow:Number, adherenceGroupsGroupHeight:Number):Number
			{
				return calculateLocation();
			}
			
			private function stackingUpdateHandler(stackingUpdated:Boolean):void
			{
				if (stackingUpdated == true)
				{
					calculateLocation();
				}
			}
			
			private function calculateLocation():Number
			{
				adherenceWindowCanvas.graphics.clear();
				
				var hour:Number = _adherenceGroup.hour;
				var adherenceWindow:Number = _adherenceGroup.adherenceWindow;
				
				var startAngle:Number = hour*15 - adherenceWindow*15;
				var arc:Number = 2*adherenceWindow*15;
				
				adherenceWindowCanvas.graphics.beginFill(0xFFFFFF, 0.5);
				Wedge.draw(adherenceWindowCanvas, _scheduleWidgetView.adherenceGroupsGroup.width/2, _scheduleWidgetView.adherenceGroupsGroup.width/2, _scheduleWidgetView.adherenceGroupsGroup.width/2, arc, startAngle - 90);
				adherenceWindowCanvas.graphics.endFill();
				
				return 0;
			}
		]]>
	</fx:Script>
	<mx:Canvas id="adherenceWindowCanvas" width="100%" height="100%"/>
</s:Group>
